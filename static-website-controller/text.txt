    5  mkdir .config
    6  mkdir fontconfig
   10  mkdir ws
   14  /Users/AJ/.ssh/known_hosts\ 2 ; exit;
   32  chmod 600 known_hosts
   43  git checkout DavidFAround2 
   51  git checkout DavidFAround 
   52  git checkout maste
   54  git checkout origin/DavidFAround2 
   58  /Applications/Utilities/Keychain Access.app
   59  /Applications/Utilities/KeychainAccess.app
   60  /Applications/Utilities/Keychain\ Access.app
   61  kill taskf=gated
   62  kill taskgated
   63  sudp kill taskgated
   64  sudo kill taskgated
   65  sudo kill -9 taskgated
   68  uicklookd   0.0  00:00.10 4     1    88    4172K  72K    0B     37703
   69  36111  Google Chrom 0.0  00:00.08 8     1    73    9244K  0B     0B     372
   70  33096  BTTRelaunch  0.0  00:01.28 4     2    127   3216K  0B     0B     33096
   71  33094  BetterTouchT 0.0  00:00.01 2     1    23    896K   0B     0B     33094
   72  33093  BetterTouchT 0.0  00:00.01 2     2    19    896K   0B     0B     33093
   73  33087  CoreServices 0.0  00:00.48 3     1    172   5028K  0B     0B     33087
   74  33085  BetterTouchT 3.8  00:17.54 8     3    305   26M+   620K+  0B     33085
   89  mak
  154  brew install clock
  306  artii -f small "WELCOME"|lolcat; artii -f sbook "MASTER  AJ"|lolcat; fortune | cowsay | lolcat
  415  artii -f mike " Hi  Master  Alex" | lolcat
  441  git checkout origin/DavidFAround 
  506  git checkout p02_FineGrain 
  507  git checkout p02_TurnIn
  517  git checkout finegrain 
  520  git checkout p02_turnin 
  526  git checkout JesusAndAlexExperiWait 
  532  git checkout p02_JesusAndAlexExperWait 
  537  git checkout origin/turnin_project01 
  538  git checkout turnin_project01 
  539  git checkout working 
  553  git checkout -b scatterAttempt2
  557  git commit -m"working r-scattero blot but problem with select list"
  560  git commit -m"ready to turn in: everything working"
  583  git checkout
  585  nuerl netwrok | machine   learning | AI             
  586  CS 343 Scot Niekom 
  596  git checkout p02
  606  git checkout -b p03_Turnin
  610  git checkout -b p04
  621  git checkout p04 
  622  git checkout p02_TurnIn 
  623  git checkout -b p04_TurnIn
  629  git checkout p03 
  642  git checkout origin/p04 
  648  git checkout p03
  649  git checkout p03_Turnin 
  652  git checkout p04_TurnIn 
  659  git checkout p03_pcb_vm_wip 
  661  git checkout project2 
  662  mkdir test
  665  git clone git@github.com:wookayin/pintos.git
  667  checkout master
  671  git checkout p04_aj
  672  git checkout -b p04_aj
  677  make check
  679  git checkout p04
  692  git commit -m"Fix Spelling mistake in the pp after presentation"
  715  cd desk
  716  cd deskt
  719  git clone http://github.com/ajipsuim/fullstack-nanodegree-vm fullstack
  720  git@github.com:ajipsum/fullstack-nanodegree-vm.git
  721  git clone git@github.com:ajipsum/fullstack-nanodegree-vm.git
  722  cd fullstack-nanodegree-vm
  724  cd udacity_fullstack-nanodegree-vm
  751  docker --v
  752  docker -
  753  docker -v
  764  docker run hello
  765  docker login 
  766  govker
  767  docker run 
  768  docker pull gpdowning/python
  769  docker start python
  770  docker start d74e62bfc51c
  771  docker run -it -v Downloads/docker history
  772  docker history
  773  docker history 0e4b7a503e1b
  774  docker run -it -v gpdowning/python
  803  docker Dockerimage
  811  docker Dockerimages
  812  cat Dockerimages
  813  Docker imgaes
  814  Docker images
  815  docker run
  816  git checkout 5591ddc
  817  git checkout d27f4b2
  824  cd thinkpy
  837  systemctl start docker
  838  run systemctl start docker
  844  rm /usr/local/bin/docker
  845  sudo docker run hello-world
  846  docker run --help
  847  docker run -it -v /Users/AJ/ws/CS373/ gpdowning/python
  848  docker run -it -v /Users/AJ/ws/CS373/gitlab/ gpdowning/python
  851  cat Dockerfile FROM python:3
  852  docker build -t gpdowning/python
  853  docker build -t gpdowning/python .
  854  sudo -H docker build -t gpdowning/python .
  855  docker build -t python
  856  docker build -t python .
  857  sudo docker build -t python .
  858  docker update
  859  docker update .
  860  docker update --help
  861  docker --h
  862  brew update docker
  863  brew upgrad docker
  864  brew upgrade docker
  865  docker image
  866  docker run -it -v /Users/AJ/ws/CS373:gitlab -w /usr/python gpdowning/python
  867  docker run -it -v /Users/AJ/ws/CS373/git:/usr/python -w /usr/python gpdowning/python
  868  docker run -it -v /Users/AJ/ws/CS373/gitlab:/usr/python -w /usr/python gpdowning/python
  869  docker run -it -v /Users/AJ/ws/CS373/gitlab gpdowning/python
  870  docker run -it -v /Users/AJ/ws/CS373/gitlab:thisfolder -w /usr/python gpdowning/python
  871  docker run -it -v /Users/AJ/ws/CS373/gitlab:thisfolder -w thisfolder gpdowning/python
  872  docker run -it -v /Users/AJ/ws/CS373/gitlab:/thisfolder -w /thisfolder gpdowning/python
  875  docker kill all
  876  docker dock
  882  AKE PULL
  883  make pull
  886  diff makefile makefile2
  887  rm makefile2.html
  888  diff makefile makefile.txt
  891  diff - qmakefile makefile.txt
  892  diff - q makefile makefile.txt
  893  diff -q makefile makefile.txt
  894  diff --normal makefile makefile.txt
  895  diff  makefile < makefile.txt
  896  diff  makefile %< makefile.txt
  901  sudo -H dock
  930  bash --login '/Applications/Docker/Docker Quickstart Terminal.app/Contents/Resources/Scripts/start.sh'
  931  rm '/usr/local/bin/docker'
  932  docker imagees
  933  make dock
  937  docker kill -a
  938  docker kill --all
  939  docker kill
  940  docker docker kill --help
  941  bash --login '/Applications/CS/Docker/Docker Quickstart Terminal.app/Contents/Resources/Scripts/start.sh'
  942  dock
  943  docker-machine stop defaukt
  944  dockstart
  945  dockestop
  946  tell application "System Events" to click at {890, 460}
  947  dockstop
  967  make RunCollatz.pyx
  968  make format
  988  rundock
 1012  git checkout origin/master 
 1017  git checkout -b MyTests
 1023  git checkout upstream/master 
 1031  docker stop
 1032  docker -a
 1046  git checkout MyTests 
 1049  add commit -m"Close #17: hackerrank id; Close #20: Unit test print"
 1050  git add commit -m"Close #17: hackerrank id; Close #20: Unit test print"
 1051  git commit -m"Close #17: hackerrank id; Close #20: Unit test print"
 1068  make collatz-tests
 1071  make scrub
 1073  make Collatz.html
 1076  make Collatz.log
 1106  mkdir backend
 1107  git commit -m"Create Backend folder"
 1131  ssh-keygen 
 1136  ssh-keygen -t rsa -b 4096
 1153  cd hackerrank.com
 1155  j hack
 1161  mkdir docker
 1163  docker build -t backend:latest
 1165  docker build -t backend:latest 
 1166  cd p01-collatz/make docker
 1167  cd p01-collatz/ make docker
 1173  brew install docker-cloud
 1175  docker-cloud
 1176  docker-cloud ls
 1177  docker-cloud service ls
 1178  docker-cloud service ps
 1179  docker-cloud nodecluster ls
 1197  pip install Flask --upgrade --user
 1198  sudo pip install Flask --upgrade --user
 1199  Flask
 1200  export FLASK_APP=hello.py
 1201  export FLASK_ENV=development
 1202  flask run
 1204  docker stop abadffdb4e28
 1205  docker stop e799ff2f63ab
 1206  docker stop                          
 1207  $(sudo docker ps -aq)
 1208  echo $(sudo docker ps -aq)
 1209  sudo echo $(sudo docker ps -aq)
 1210  sudo docker ps -aq
 1211  docker -ap
 1212  man docker
 1213  man -a docker
 1214  docker -aq --help
 1215  docker ps --help
 1216  rundcker
 1217  docker ps -q
 1218  docker ps -aq
 1219  docker rm $(docker ps -aq)
 1220  docker rm $(sudp docker ps -aq)
 1221  docker rm $(sudo docker ps -aq)
 1222  sudo docker rm $(sudo docker ps -aq)
 1223  sudo -H docker rm $(sudo docker ps -aq)
 1224  docker pa
 1225  docker stop $($docker ps -aq)
 1226  sudp docker stop $(docker ps -aq)
 1227  sudo docker stop $(sudp docker ps -aq)
 1228  sudo docker stop $(sudo docker ps -aq)
 1229  sudo docker stop $(docker ps -aq)
 1230  docker-machine ls -a
 1231  docker-machine ls --help
 1232  docker-machine ls -aq
 1233  docker-machine ls -\q
 1234  docker-machine ls -q
 1235  docker run hello-world .
 1236  docker run python
 1237  stopdocker
 1239  cd Docker\ Continuous\ Delivery
 1240  cd Ex_Files_Docker_TheBasics
 1246  docker run hello-world
 1247  docker-machine ssh
 1248  docker run -ti ubuntu zsh
 1249  docker run -ti ubuntu bash
 1250  docker stop $(sudo docker ps -q)
 1251  docker stop $(sudo docker ps -aq)
 1252  docker stop $(docker ps -q)docker ps
 1253  sudo docker login -u AWS -p eyJwYXlsb2FkIjoiMm4vUkcrUzR5ZFI2WTJzUHZBTXN1RFQvNnU5UWdhTjFwSXBFMk1nK2JUT21naDlMbjAyNDE0TUkwL2d4eEpNN2VpNW84Yi9XMUlGV1VHbGl4Z3BEZjE5U0ZZZG56Y0x5VTg1a2NGUE53Nkorbkd4eEpxTG1ZRVppQ3k4dkVTTVBwMldPQTcxN2lLV0FMTUpBTUlXS3VzYmE0NnlVUGUxVWNINXFlY1pveWNGWm9TcDNRNGJoWENFUlJnWGduK0FlZ0UrK3BxeFZhWStENGIyOHR5ZXhqN1pqZ1JiTzFJS2liK3N6ZUxSSmEvY2tsYVZyUGZCdS91RnhkblV2M1pEa3hQK2FldVFOYkQxMjNxN0JkbTJMazZGbVVBQTF2MXB0blpCU0l4cm1laWpYMmlGUnpqVkFmem5rR0JYY1YvZXhrcTNMcjdQRW0rcnV0cUdmQTVEYVhudFpHVW9iWnorTGYvRE9LbGRPRkhqakhhUjRrR3czNXhLUktxcFZGNWlUd2wwdW04QTV3RExwajVuV1ZjcVJUWEV6NVdvZ2RPUFE4VEJUL3h6OXRjR1RyVGd6MTBPK3dnU0JibDd0d3dmbTZhb1FJcVRUclVPMGZURjV4WXdvSDV5ejJuaE9pS2pYWU5WRWV5czVnVWF6YVRkeHBhVmQvR0VObVh6a2F1UHE0MnFRanhKZTVpd0dYUTUyaVN3YjZVaWtCVVhwYVppa1l2QmhJMDNFSEVrZmFMN3VaZE5NdUgveWxBZzNSZFBUMEIyRFhuaXppSTI3bkNiVG44cjljWkVTM2NuczhhTkUvWFE0Zm9yM2JZeDBDU0ROOEpDMEg2OGpyaWszYTMxWmJ2T2VreVdyeWk3Z3Q4MnJEL29aMUEzUURJZTExRWxySGhtV2dCb045YkZhQVdFbVUwdzZreVVpQUVBVUp1dkx5bGU2ZkF4NjFONDlQbWNoWnBzVk5IdDUrYkhLS2xOd2xWRGRTWVlpVVlLMHdzY2UwWHRFcDM4dDBwYWZESVQ2ZUxPQmtrYnZEZXU5R0ZLUW5zNzBZQWY2Ynp4M3JKTUlrZllpVUpJR0RZcDVOdlFDWDJ0T2xuMmRKa05WZzdpZkFrZDJIdjhYN0k5cjFLV3JsV0lZOEpUUytXQWd0NFB3VXc1N2wxTVA5WXUwMU1id1FmTU14dGsvTXMzQnJnNjJ5cytmMm1sSWtzVDV0VFlsbmRHL0ZaeWxwYit6Y0NWR004c1NvS3ZNNUxwSFYvazBoQkNITlZ0ZjVTZ1p6YkdwREZ3c2lzQ0o3ZFZTUWtYcDZ4OWkxMjA0bS9tbmhUTE9FWHdBVU83RUUxUzkySHhsZmlZYnJpd05weGJLeVdTdCtEMzE1WUVnZitIbVRBKzBzRUc0U2Zzcmk2Y0VRRWNob3lId1lDOGw5bFpBVnIxZjY2NnJ0WEl4S29rTE5RVS9lekdUelRqWmJCWDIwL3lURGlnOGIrcTF5OVBiaStnQ3VYTXptTk5sIiwiZGF0YWtleSI6IkFRRUJBSGpCNy9pZ3dNZzROUHdhdXJ4U0lZeDRIZm54dUdjLzQ4YkR3dndEcE5ZV1pnQUFBSDR3ZkFZSktvWklodmNOQVFjR29HOHdiUUlCQURCb0Jna3Foa2lHOXcwQkJ3RXdIZ1lKWUlaSUFXVURCQUV1TUJFRURBR3NHbldvYzEyQXpQL1lkZ0lCRUlBNzhBbDk4TUcvSFhuOUV0c0E0ZjIyZUpXNXJxamQrOVdHN2NIRDMwYk50aUxia05WbWFybzI4RFE4MG82TmoxNzhsdjdneFNpcjVxbjNGWkk9IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNTMwMDk1MjAwfQ== https://570510869987.dkr.ecr.us-east-2.amazonaws.com
 1254  docker login -u AWS -p eyJwYXlsb2FkIjoiMm4vUkcrUzR5ZFI2WTJzUHZBTXN1RFQvNnU5UWdhTjFwSXBFMk1nK2JUT21naDlMbjAyNDE0TUkwL2d4eEpNN2VpNW84Yi9XMUlGV1VHbGl4Z3BEZjE5U0ZZZG56Y0x5VTg1a2NGUE53Nkorbkd4eEpxTG1ZRVppQ3k4dkVTTVBwMldPQTcxN2lLV0FMTUpBTUlXS3VzYmE0NnlVUGUxVWNINXFlY1pveWNGWm9TcDNRNGJoWENFUlJnWGduK0FlZ0UrK3BxeFZhWStENGIyOHR5ZXhqN1pqZ1JiTzFJS2liK3N6ZUxSSmEvY2tsYVZyUGZCdS91RnhkblV2M1pEa3hQK2FldVFOYkQxMjNxN0JkbTJMazZGbVVBQTF2MXB0blpCU0l4cm1laWpYMmlGUnpqVkFmem5rR0JYY1YvZXhrcTNMcjdQRW0rcnV0cUdmQTVEYVhudFpHVW9iWnorTGYvRE9LbGRPRkhqakhhUjRrR3czNXhLUktxcFZGNWlUd2wwdW04QTV3RExwajVuV1ZjcVJUWEV6NVdvZ2RPUFE4VEJUL3h6OXRjR1RyVGd6MTBPK3dnU0JibDd0d3dmbTZhb1FJcVRUclVPMGZURjV4WXdvSDV5ejJuaE9pS2pYWU5WRWV5czVnVWF6YVRkeHBhVmQvR0VObVh6a2F1UHE0MnFRanhKZTVpd0dYUTUyaVN3YjZVaWtCVVhwYVppa1l2QmhJMDNFSEVrZmFMN3VaZE5NdUgveWxBZzNSZFBUMEIyRFhuaXppSTI3bkNiVG44cjljWkVTM2NuczhhTkUvWFE0Zm9yM2JZeDBDU0ROOEpDMEg2OGpyaWszYTMxWmJ2T2VreVdyeWk3Z3Q4MnJEL29aMUEzUURJZTExRWxySGhtV2dCb045YkZhQVdFbVUwdzZreVVpQUVBVUp1dkx5bGU2ZkF4NjFONDlQbWNoWnBzVk5IdDUrYkhLS2xOd2xWRGRTWVlpVVlLMHdzY2UwWHRFcDM4dDBwYWZESVQ2ZUxPQmtrYnZEZXU5R0ZLUW5zNzBZQWY2Ynp4M3JKTUlrZllpVUpJR0RZcDVOdlFDWDJ0T2xuMmRKa05WZzdpZkFrZDJIdjhYN0k5cjFLV3JsV0lZOEpUUytXQWd0NFB3VXc1N2wxTVA5WXUwMU1id1FmTU14dGsvTXMzQnJnNjJ5cytmMm1sSWtzVDV0VFlsbmRHL0ZaeWxwYit6Y0NWR004c1NvS3ZNNUxwSFYvazBoQkNITlZ0ZjVTZ1p6YkdwREZ3c2lzQ0o3ZFZTUWtYcDZ4OWkxMjA0bS9tbmhUTE9FWHdBVU83RUUxUzkySHhsZmlZYnJpd05weGJLeVdTdCtEMzE1WUVnZitIbVRBKzBzRUc0U2Zzcmk2Y0VRRWNob3lId1lDOGw5bFpBVnIxZjY2NnJ0WEl4S29rTE5RVS9lekdUelRqWmJCWDIwL3lURGlnOGIrcTF5OVBiaStnQ3VYTXptTk5sIiwiZGF0YWtleSI6IkFRRUJBSGpCNy9pZ3dNZzROUHdhdXJ4U0lZeDRIZm54dUdjLzQ4YkR3dndEcE5ZV1pnQUFBSDR3ZkFZSktvWklodmNOQVFjR29HOHdiUUlCQURCb0Jna3Foa2lHOXcwQkJ3RXdIZ1lKWUlaSUFXVURCQUV1TUJFRURBR3NHbldvYzEyQXpQL1lkZ0lCRUlBNzhBbDk4TUcvSFhuOUV0c0E0ZjIyZUpXNXJxamQrOVdHN2NIRDMwYk50aUxia05WbWFybzI4RFE4MG82TmoxNzhsdjdneFNpcjVxbjNGWkk9IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNTMwMDk1MjAwfQ== https://570510869987.dkr.ecr.us-east-2.amazonaws.com
 1256  docker rm 74dfa8adf968
 1257  docker rm --help
 1258  docker rmi --help
 1259  docker rmi 74dfa8adf968
 1260  docker rmi -f 74dfa8adf968
 1261  docker rmi -f 21f6f5d8162a
 1262  docker rmi -f e9b315a631ad
 1263  docker rmi -f 9c0f793edb85
 1264  docker rmi -f 5371870a2bb7 f1fbb73ecc00 020d9635a827
 1265  docker rmi -f a5b7afcfdcc8
 1266  cd backednd
 1267  docker run -it -v $(PWD) python
 1268  docker run -ti python bash
 1269  docker rmi -f 3f0690469ab0
 1270  dockwe ps
 1271  docker run -ti backend terminal
 1275  sudo pip install Flask
 1276  sudo -H pip install Flask
 1277  docker run -ti backend:latest
 1278  docker run -ti backend python
 1279  docker run -ti backend FLASK_APP=app.py flask run
 1280  docker run -ti backend "FLASK_APP=app.py flask run"
 1281  docker run -ti -p 80:80 backend "FLASK_APP=app.py flask run"
 1282  docker run -ti -p 80:80 backend FLASK_APP=app.py flask run
 1283  docker run -ti -p 80:80 backend ,FLASK_APP=app.py flask run
 1284  docker run -ti -p 80:80 backend bash
 1285  docker run -ti -p 80:80 backend
 1286  docker run -ti backend
 1287  docker run -ti backend bash && FLASK_APP=app.py && flask run
 1288  docker run -ti backend bash
 1289  docker run -ti -p 80:5000 backend bash
 1290  j docker 
 1291  docker run -ti -p backend bash
 1292  docker run -ti -P backend bash
 1293  docker run -ti -p 5000:5000 backend bash
 1294  docker run -ti -P backend bash FLASK_APP=app.py flask run
 1295  docker run -ti -P backend bash && FLASK_APP=app.py && flask run
 1296  docker ps $(FORMAT)
 1297  docker ps --format #FORMAT
 1298  docker run -ti -p 5000:5000 -v $(PWD):/usr/app -w /usr/app backend bash && FLASK_APP=app.py && flask run
 1300  docker run -ti -P -v $(PWD):/usr/app -w /usr/app backend bash && FLASK_APP=app.py && flask run
 1301  docker run -ti -p 80:5000 -v $(PWD):/usr/app -w /usr/app backend bash && FLASK_APP=app.py && flask run
 1302  docker run -ti -p 5000:80 -v $(PWD):/usr/app -w /usr/app backend bash && FLASK_APP=app.py && flask run
 1303  docker run -ti -p 5000:80 -v $(PWD):/usr/app -w /usr/app backend "bash && FLASK_APP=app.py flask run"
 1304  docker run -ti -p 5000:80 -v $(PWD):/usr/app -w /usr/app backend "bash && FLASK_APP=app.py && flask run"
 1305  docker run -ti -p 5000:80 -v $(PWD):/usr/app -w /usr/app backend bash -c "FLASK_APP=app.py && flask run"
 1306  docker run -ti -p 5000 -v $(PWD):/usr/app -w /usr/app backend bash -c "FLASK_APP=app.py && flask run"
 1330  pip install Flask
 1332  cd CS373/docker
 1334  sudo docker ps --format $FORMAT
 1335  docker restart
 1336  docker ip
 1337  docker-machine restart
 1338  docker run -ti -p 5000:5000 -v $(PWD):/usr/app -w /usr/app backend bash -c "FLASK_APP=app.py && flask run"
 1339  docker run -ti -p 127.0.0.1:5000:5000 -v $(PWD):/usr/app -w /usr/app backend bash -c "FLASK_APP=app.py && flask run"
 1340  docker run -d -p 127.0.0.1:5000:5000 -v $(PWD):/usr/app -w /usr/app backend bash -c "FLASK_APP=app.py && flask run"
 1341  docker run -p 127.0.0.1:5000:5000 -v $(PWD):/usr/app -w /usr/app backend bash -c "FLASK_APP=app.py && flask run"
 1346  docker run -p 127.0.0.1:5000:5000 -v $(PWD):/usr/app -w /usr/app backend bash -c "virtualenv . && FLASK_APP=app.py && flask run"
 1347  docker run -p 127.0.0.1:5000:5000 -v $(PWD):/usr/app -w /usr/app backend bash -c "virtualenv ./ && FLASK_APP=app.py && flask run"
 1348  docker run -p 127.0.0.1:5000:5000 -v $(PWD):/usr/app -w /usr/app backend bash 
 1349  docker run -p 127.0.0.1:5000:5000 -v $(PWD):/usr/app -w /usr/app backend bash -c 
 1350  docker run -p 127.0.0.1:5000:5000 -v $(PWD):/usr/app -w /usr/app backend bash
 1358  docker run -ti -p 127.0.0.1:5000:5000 -v $(PWD):/usr/app -w /usr/app backend bash
 1359  docker log
 1360  docker log -l
 1361  docker log ecstatic_jepsen
 1362  docker -ps
 1363  docker --rm $(docker ps -q)
 1364  docker -rm $(docker ps -q)
 1365  docker rm $(docker ps -q)
 1366  docker attach ecstatic_jepsen
 1368  rm backend
 1369  rm -fr backend
 1370  docker run --rm -ti -p 127.0.0.1:5000:5000 -v $(PWD):/usr/app -w /usr/app backend bash
 1371  FLASK_APP=app.py flask run 
 1375  git commit -m "add backend"
 1386  j docker
 1388  git checkout Dockerfile origin/master 
 1389  git checkout ./Dockerfile origin/master 
 1394  docker ps --format $FORMAT
 1395  docker tag backend:latest 570510869987.dkr.ecr.us-east-2.amazonaws.com/backend:latest
 1397  docker login -u AWS -p eyJwYXlsb2FkIjoiTXYrMmVuRFV0YlEyMXB4dWQ4R2VCSGhPSnVoT3lad3ppODVwTmpPSEJaVE1XM0s3b3lkZWNzZDBBWlBGcVBjMWtROUp4Nm9jMEY0M1NsRC9pV1dkOHNpQ05xUEgxWHg0bENabzRpRVVuUlMybC9CMmNzb2Y1RUd6b2o5NzhvclIrcXdjVmN4aVlwMFhyUlE4bnFoV243OWd1T0plVElSS0t3L2ZDSkV0YkN1eFRMVjlOR1hZbkdNc3BrRDVqNElPclNXQk5ZWnpaWkIybUdjT2VlZ2pPUnNuc0g1azRpVnpQTFRYeFY1YnNWY0R4R1k5LzJjSjUzOWIraUVaR0g2R2huRmRwZnZWSUNEOUg4QzlVTisxbkUwR1ZreFpNSkg1WC8xT0xJejJVRTM3bTArL21jWThtYlR2Ym42d2VZV2dwNlk2S1pNdFJvZlpxOHpUN3p2aEJMV0w0L2RjdDdoUDE0VXk0Y2dXNHdRLzhycGxERWNaTzUyOG5KbGlPdURrNnhVRWYxTnJ0VGRHM1VsQk42OW5QWUJnWUJWaXhQbG9ja3psSkxHRG8vZ0lGZ2pKTVlBVVRFdFVHeFF1ckhrNHcvQXQ2UjB2VXk1SXBlQ25zNk5ESUl2VUVEV051Z1h6RUhHYW5PZ3djbFdId2ZKWHZyNGtJb0hZZUhzSnRhYThjSDZKYzlyUkRFeUg5Y0tmRU1FRmxjV1pEK1pzRnhyakpYWjNZajVNRjhjZ0VwTEMxOHNtNVVUNEhwalRtNm15OEl6YWQ3ZnlYNDNpbFZLcXdhVHMyN0VnTS9UeFN0eXowSWM4bVVMeHIvUU9Td3BVZ3R2UVROUnh2ZVJXeXNlMTRNaEx6RVBvZTJoUUZLVTZCcVZoWllNNDBrZExQeDBvdTJRazF1c2IzVDJYeVlwdVhpMkJOaFdvOUxOKzJJQjluazBkR05mSTg3Y0VKVk1vSVBpN0VYbjBRYjIreGREcm54TEEvKzlhMXBKT2VGWWRwSzhOa1FuUVFTTzRCNWZ3R0RQU3pWYUNOUnRDY1lyamVleEFPRVA3UVF4MzYvQjhKQjU4RExQck1YRDlWdW1ETWplQkVGTDVKZCtGYUEzSmsxUVNHbUFKV3hsYjFYak9PcjRST1JmUERMWm51Q0xOMithY0FGZThvZXZ2cEpWYm9pSitET0VhdldoL1AvSVZRdW1JN0ZuSjZQR2hSTzd1ZWgxeEszaDJLb0NBRzNSZlpwRnlUYTNTblBPTUVVNTc5YkRsUmZzSHNHOUNPanBHWmJZbThIdEo3V2xqZFREWDVkVWF6YkUxZ3NaL2kzZXdpdXdrMVBHSlJ4Skh6eFk4QzZML0M2elh6dlphbWJySGlLemYzQ2d1UXhZQTVuemREREJoYkpJOHJYVUErVGFuWHk2Q0NHZXdlbUlQMkh6ckwrWXF1Wkt1Z0lLZGxxOStlclRQTmd5bXJHVmU2WUVxUWdqR09GUTJSN0doajk2cGNwVkNxUE9CIiwiZGF0YWtleSI6IkFRRUJBSGpCNy9pZ3dNZzROUHdhdXJ4U0lZeDRIZm54dUdjLzQ4YkR3dndEcE5ZV1pnQUFBSDR3ZkFZSktvWklodmNOQVFjR29HOHdiUUlCQURCb0Jna3Foa2lHOXcwQkJ3RXdIZ1lKWUlaSUFXVURCQUV1TUJFRURNekpwQm5MOTlJZnRIdU8yUUlCRUlBN09TbVNYbHU4bnpzc0QzRzlNUHYzS3hlcUxwZWQwNEh1UFdjaDhaQjR0aEtSSE1uOU1HRlRaeFcyaUNzSnNEeS9POTNzckk4VVZ4YllnVjQ9IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNTMwMjA0OTc5fQ== https://570510869987.dkr.ecr.us-east-2.amazonaws.com
 1399  docker build -t backend .
 1400  docker push 570510869987.dkr.ecr.us-east-2.amazonaws.com/backend:latest
 1407  j backend
 1410  {% raw %}alias dip="docker inspect --format '{{ .NetworkSettings.IPAddress }}'"{% endraw %}
 1411  docker inspect --format '{{ .NetworkSettings.IPAddress }}'"\n
 1412  docker inspect --format '{{ .NetworkSettings.IPAddress }}'
 1413  docker inspect --format "{{ .NetworkSettings.IPAddress }}"
 1418  git commit -m"Add hackerrank inclass tests"
 1432  npm install /Users/AJ/ws/package.json
 1433  npm install - r/Users/AJ/ws/package.json
 1434  npm install -r /Users/AJ/ws/package.json
 1438  npm install js-tokens
 1450  npm install lockfileVersion
 1459  cd 2.7/site-packages
 1473  cd /Users/AJ/ws/CS373/git ; env "FLASK_APP=app.py" "PYTHONIOENCODING=UTF-8" "PYTHONUNBUFFERED=1" /usr/local/bin/python3 /Users/AJ/.vscode/extensions/ms-python.python-2018.6.0/pythonFiles/PythonTools/visualstudio_py_launcher.py /Users/AJ/ws/CS373/git 59977 34806ad9-833a-4524-8cd6-18ca4aa74f14 RedirectOutput,RedirectOutput -m flask run --no-debugger --no-reload 
 1520  git pusk
 1547  node --debug-brk=33330 app.js
 1548  node --debug-brk=33330 is_prime.js
 1549  node --inspect-brk=33330 app.js
 1575  cd docker
 1592  kill -9 99032
 1621  mkdir /Volumes/SERVER
 1622  sudo mkdir /Volumes/SERVER
 1628  mkdir /Users/AJ/SERVER
 1672  git commit -m"disable spell check -- vscode"
 1679  git commit -m"update backend docker"
 1719  cd /Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home
 1756  rm /usr/local/lib/libtkstub8.6.a
 1758  rm /usr/local/lib/pkgconfig/tcl.pc
 1759  rm /usr/local/lib/pkgconfig/tk.pc
 1760  rm /usr/local/include/fakemysql.h\n  /usr/local/include/fakepq.h\n  /usr/local/include/fakesql.h\n  /usr/local/include/itcl.h\n  /usr/local/include/itcl2TclOO.h\n  /usr/local/include/itclDecls.h\n  /usr/local/include/itclInt.h\n  /usr/local/include/itclIntDecls.h\n  /usr/local/include/itclMigrate2TclCore.h\n  /usr/local/include/itclTclIntStubsFcn.h\n  /usr/local/include/mysqlStubs.h\n  /usr/local/include/odbcStubs.h\n  /usr/local/include/pqStubs.h\n  /usr/local/include/python2.7/greenlet/greenlet.h\n  /usr/local/include/tcl.h\n  /usr/local/include/tclDecls.h\n  /usr/local/include/tclOO.h\n  /usr/local/include/tclOODecls.h\n  /usr/local/include/tclPlatDecls.h\n  /usr/local/include/tclThread.h\n  /usr/local/include/tclTomMath.h\n  /usr/local/include/tclTomMathDecls.h\n  /usr/local/include/tdbc.h\n  /usr/local/include/tdbcDecls.h\n  /usr/local/include/tdbcInt.h\n  /usr/local/include/tk.h\n  /usr/local/include/tkDecls.h\n  /usr/local/include/tkPlatDecls.h
 1761  sudo rm /usr/local/include/fakemysql.h\n  /usr/local/include/fakepq.h\n  /usr/local/include/fakesql.h\n  /usr/local/include/itcl.h\n  /usr/local/include/itcl2TclOO.h\n  /usr/local/include/itclDecls.h\n  /usr/local/include/itclInt.h\n  /usr/local/include/itclIntDecls.h\n  /usr/local/include/itclMigrate2TclCore.h\n  /usr/local/include/itclTclIntStubsFcn.h\n  /usr/local/include/mysqlStubs.h\n  /usr/local/include/odbcStubs.h\n  /usr/local/include/pqStubs.h\n  /usr/local/include/python2.7/greenlet/greenlet.h\n  /usr/local/include/tcl.h\n  /usr/local/include/tclDecls.h\n  /usr/local/include/tclOO.h\n  /usr/local/include/tclOODecls.h\n  /usr/local/include/tclPlatDecls.h\n  /usr/local/include/tclThread.h\n  /usr/local/include/tclTomMath.h\n  /usr/local/include/tclTomMathDecls.h\n  /usr/local/include/tdbc.h\n  /usr/local/include/tdbcDecls.h\n  /usr/local/include/tdbcInt.h\n  /usr/local/include/tk.h\n  /usr/local/include/tkDecls.h\n  /usr/local/include/tkPlatDecls.h
 1762  sudo rm -H /usr/local/include/fakemysql.h\n  /usr/local/include/fakepq.h\n  /usr/local/include/fakesql.h\n  /usr/local/include/itcl.h\n  /usr/local/include/itcl2TclOO.h\n  /usr/local/include/itclDecls.h\n  /usr/local/include/itclInt.h\n  /usr/local/include/itclIntDecls.h\n  /usr/local/include/itclMigrate2TclCore.h\n  /usr/local/include/itclTclIntStubsFcn.h\n  /usr/local/include/mysqlStubs.h\n  /usr/local/include/odbcStubs.h\n  /usr/local/include/pqStubs.h\n  /usr/local/include/python2.7/greenlet/greenlet.h\n  /usr/local/include/tcl.h\n  /usr/local/include/tclDecls.h\n  /usr/local/include/tclOO.h\n  /usr/local/include/tclOODecls.h\n  /usr/local/include/tclPlatDecls.h\n  /usr/local/include/tclThread.h\n  /usr/local/include/tclTomMath.h\n  /usr/local/include/tclTomMathDecls.h\n  /usr/local/include/tdbc.h\n  /usr/local/include/tdbcDecls.h\n  /usr/local/include/tdbcInt.h\n  /usr/local/include/tk.h\n  /usr/local/include/tkDecls.h\n  /usr/local/include/tkPlatDecls.h
 1764  rm tkPlatDecls.h
 1782  git checkout production 
 1783  git checkout pet-tils
 1784  git checkout pet-utils 
 1792  git commit -m "Add UML folder and postman links"
 1822  pip install Flask-Restless
 1823  docker --help
 1824  docker -r build backend .
 1825  docker build -r backend .
 1827  cd ../backend
 1828  docker build --help
 1829  docker build backend:latest .
 1830  docker build backend
 1831  docker build backend .
 1832  sudo docker build
 1833  sudo docker build .
 1835  docker build .
 1837  docker rmi $(docker ps -q)
 1838  docker container ps
 1839  docker container top
 1840  docker rmi $(docker images -q)
 1848  docker-compose dwon
 1849  docker-compose --help
 1850  docker container -ls
 1851  docker attach idb_backend_1
 1853  docker attach -ti idb_backend_1 bash
 1854  docker attach -ti idb_backend_1
 1855  docker i
 1859  docker run 898b72d826a6
 1860  docker run -ti 898b72d826a6
 1861  rundocker 
 1863  docker run -ti idb_backend:latest
 1865  docker rmi
 1868  docker rmi 5e5449202739
 1869  docker rmi 898b72d826a6
 1870  docker rmi bc4ab379783d
 1871  docker rmi a7fa5d375b8c
 1872  docker rmi 91bc9dfe7b50
 1873  docker rmi e7076fb2f8c1
 1874  docker rmi ec68b6665c7e
 1875  docker rmi 80a0a9e91140
 1876  docker rmi cf52b1a7491e
 1877  docker rmi a46d8c73ba7e
 1878  docker rmi 729e1b636e93
 1879  docker rmi cc39fb470fc0
 1880  docker rmi 67b982f4947c
 1881  docker rmi f4323c827981
 1884  dc glklk
 1886  docker container st db887176dc19
 1887  docker container start db887176dc19
 1888  docker container start db887176dc19 bash
 1889  docker container start --help
 1890  docker container start -a db887176dc19
 1892  docker run idb_backend:latest
 1893  docker run idb_backend:latest bash
 1894  docker container l
 1895  docker container -l
 1899  dbu idb_backend:latest
 1900  docker rmi ce54ff8f2af6
 1901  docker rmi 763658d5a5ec
 1902  docker rmi e0a534a04a1c
 1903  docker rmi idb_backend
 1904  docker container ls -a
 1905  docker rmi backend
 1906  docker-compose uo --
 1907  docker attach idb_backend_1 bash
 1908  docker attach idb_backend_1 
 1909  docker attach -ti 5db8f61e3371
 1910  docker attach 5db8f61e3371 -ti
 1911  docker attach 5db8f61e3371
 1912  docker run idb_backend\n
 1914  docker run idb_backend bash\n
 1915  docker run -ti idb_backend
 1916  docker rmi 123f3ffba71f
 1917  docker rmi 83801253ea0b
 1918  docker rmi 66bc0f66b7af dr
 1919  docker attach -ti 73d1ac927ea8 bash
 1920  docker attach idb_backend bash
 1921  docker attach db887176dc19
 1922  docker attach 73d1ac927ea8
 1923  docker container a
 1924  docker container la - a
 1925  docker run -ti afdd97f68003 
 1926  docker volume
 1927  docker volumels
 1928  docker volumel
 1929  docker volume inspect 21e87254c41d5fe9c4d470fc01ffdeb276bc574bb4f3986180a882ee01659053
 1930  docker volume prune
 1931  docker attach bash 73d1ac927ea8
 1932  docker attach -t 73d1ac927ea8
 1934  docker run -ti idb_backend:latest bash
 1935  docker stop 55d86ff58555
 1936  docker exec idb_backend bash
 1937  j backe__
 1941  docker run -ti -v $(PWD):/backend -w /backend idb_backend
 1942  docker run -ti -v $(PWD):/backend -w /backend idb_backend bash
 1945  docker run -ti -P -v $(PWD):/backend -w /backend idb_backend bash
 1946  docker run -ti -p 5000:5000 -v $(PWD):/backend -w /backend idb_backend bash
 1951  db_1       | 2018-07-06T08:07:50.874798Z 0 [Note] Server socket created on IP: '::'.
 1955  db_1       | 2018-07-06T08:07:50.882423Z 0 [Warning] 'user' entry 'root@localhost' ignored in --skip-name-resolve mode.
 1956  db_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018-07-06T08:07:507db_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018-07-06T08:07:50.88266vedb_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1     trdb_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018vedb_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018-07-06T0ysdb_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'usv'db_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018-07-06T08:07:50.882669Z 0 [War [db_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018-07-06T08:07:507db_1       | 2018-07-06T08:07:50.882669Zys@localhost' db_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdbs\n\ndb_1       | 2018-07-06T08:07:50.871711Z 0 [Warning] CA certificate ca.pem is self signed.\ndb_1       | 2018-07-06T08:07:50.874002Z 0 [Note] Server hostname (bind-address): '*'; port: 3306\ndb_1       | 2018-07-06T08:07:50.874375Z 0 [Note] IPv6 is available.\ndb_1       | 2018-07-06T08:07:50.874507Z 0 [Note]   - '::' resolves to '::';\ndb_1       | 2018-07-06T08:07:50.874798Z 0 [Note] Server socket created on IP: '::'.\ndb_1       | 2018-07-06T08:07:50.874332Z 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool\ndb_1       | 2018-07-06T08:07:50.878160Z 0 [Note] InnoDB: Buffer pool(s) load completed at 180706  8:07:50\ndb_1       | 2018-07-06T08:07:50.881135Z 0 [Warning] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.\ndb_1       | 2018-07-06T08:07:50.882423Z 0 [Warning] 'user' entry 'root@localhost' ignored in --skip-name-resolve mode.\ndb_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018-07-06T08:07:50.8740ored in --skip-name-resolve mode.
 1957  db_1       | 2018-07db_1       | 2018-07-06T08:07:50.874375Z 0 [Note] IPv6ys@localhost' ignored in --skip-name-resolvedb_1       | 2018-07-06T08:07:50.874507Z 0 [Note]   - '::' resolvestrdb_1       | 2018-07-06T08:07:50.on@localhost' ignored in --skip-name-resolvedb_1       | 2018-07-06T08:07:50.874332Z 0 [Note] InnoDB: Loading buffer pool(s)l.sysdb_1       | 2018-07-06T08:07:50.878160Z 0 [Note] InnoDB: Buffer pool(s) load completed at 180706  8:07:50
 1958  db_1   v'db_1       | 2018-07-06T08:07:50.881135Z 0 [Warning] Insecure configuration for -07-06T08:07:50.886327Z 0 [db_1       | 2018-07-06T08:07:50.882423Z 0 [Warning] 'user' entry 'root@localhost' ignored in --skip-name-resolve mode.\ndb_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018-07-06' db_1       | 2018-07-06T08:07:50.882669Z 0 [Warning] 'userdb_1       | 2018-07-06T08:07:50.8740ored in --skip-name-ress
 1959  rundocker
 1960  j backe
 1971  git commit -m"dockerfile and docker compose"
 1972  docker-c
 1975  flask.api
 1976  flask-api
 1977  flask
 1978  pip install Flask_Restless
 1979  python3 -m pip install -g Flask_Restless
 1980  python3 -m pip install -G Flask_Restless
 1981  python3 -m pip install --global Flask_Restless
 1982  python3 -m pip -G install Flask_Restless
 1983  python3 -m pip install Flask_Restless
 1984  python3 -m pip install Flask
 1986  dockerr
 1987  touch Dockerfile
 1988  v Dockerfile
 1989  v docker-compose.yml
 1991  echo $dockerrun
 1992  echo dockerrun
 1993  echo $(dockerrun)
 1994  bash --login /Applications/CS/Docker/Docker Quickstart Terminal.app/Contents/Resources/Scripts/start.sh
 1995  brew reinstall docker-comose
 1996  brew reinstall docker-compose
 1997  brew install docker-machine
 2009  docker infp
 2010  brew reinstall docker
 2011  docker uninstall docker
 2012  docker remove docker
 2013  brew uninstall docker
 2014  brew uninstall --ignore-dependencies docker
 2015  brew uninstall --ignore-dependencies docker-machine
 2016  brew reinstall docker-machine
 2018  docker-machine upgrade
 2019  docker-machine create
 2020  docker-machine --help
 2021  docker-machine rm default
 2022  docker-machine create default
 2023  brew install docker
 2025  docker-compose up
 2026  docker install mysql
 2032  j back__
 2033  python3 -m pip install flask_sqlalchemy
 2034  python3 -m pip install flask
 2049  docker container la
 2053  docker run idb_backend
 2054  docker-compose ps
 2058  docker network
 2059  docker network inspect 1b9fbf0b8662
 2060  docker network inspect bf56fa240183
 2061  docker volumes ls
 2062  docker volume rm $(docker volumes ls -qf dangling=true)
 2063  docker volume rm $(docker volume ls -qf dangling=true)
 2064  docker network ls | grep "bridge" 
 2065  sudo docker network rm $(docker network ls | grep "bridge" | awk '/ / { print $1 }')
 2066  docker network rm $(docker network ls | grep "bridge" | awk '/ / { print $1 }')
 2067  docker network ls | awk '$3 == "bridge" && $2 != "bridge" { print $1 }'
 2068  docker network prun
 2069  docker system prune -a
 2071  docker build -t .
 2072  docker build -t 
 2073  docker build 
 2074  docker build -t idb_backend:test .
 2075  docker system info
 2078  docker run -ti -p 5000:5000 -v $(PWD):/backend -w /backend idb_backend:test bash
 2079  sudo killall -HUP mDNSResponder
 2084  dockerrun
 2085  docker-machine regenerate-certs default
 2086  v ~/.docker/config.json
 2089  eval $(docker-machine env)
 2092  cat /Users/Shared/Jenkins/Home/secrets/initialAdminPassword
 2093  sudo cat /Users/Shared/Jenkins/Home/secrets/initialAdminPassword
 2094  docker stop 7c8e7a90fc62
 2096  docker build -t yoshi .
 2097  docker-compose down
 2098  docker info
 2100  /var/run/docker.sock
 2101  cat /var/run/docker.sock
 2102  env | frep DOCKER
 2104  docker-machine env default
 2105  docker-machine ls
 2107  cd ~/.docker/machine/machines
 2108  file "#vmdk"
 2110  brew link mysql
 2111  brew link gemu
 2112  sudo brew link qemu
 2113  su brew link qemu
 2114  brew dockto
 2115  sudo -H brew link qemu
 2117  brew link qemu
 2118  unset DOCKER_TLS_VERIFY\n unset DOCKER_CERT_PATH\n unset DOCKER_MACHINE_NAME\n unset DOCKER_HOST
 2119  sudo qemu-img convert -p -f vmdk -O qcow2 -o lazy_refcounts=on "$vmdk" "$dimg"
 2120  docker-machine start default
 2121  docker-machine
 2122  docker-machine stop default
 2123  docker 
 2124  docker version
 2125  eval $(docker-machine env default)
 2126  vmdk=~/.docker/machine/machines/default/disk.vmdk
 2127  file "$vmdk"
 2128  settings=~/Library/Group\ Containers/group.com.docker/settings.json
 2129  dimg=$(sed -En 's/.*diskPath.*:.*"(.*)".*/\1/p' < "$settings")
 2131  ls ~/.docker/machine/machines/default/
 2132  sl /Users/AJ/Library/Containers/com.docker.docker/Data/vms/0/
 2133  ls /Users/AJ/Library/Containers/com.docker.docker/Data/vms/0/
 2134  docker-compose up --build
 2135  docker rmi fcf84254e92a
 2136  cd /Users/AJ/Library/Containers/com.docker.docker/Data/vms/0/
 2137  cd  ~/Library/Containers/com.docker.docker/Data/vms/0
 2138  docker rmi e7749ea72757
 2139  docker-compose config ls
 2141  qemu-img convert -p -f vmdk -O qcow2 -o lazy_refcounts=on "$vmdk" "$dimg"
 2142  docker build -t backend:latest .
 2143  mv Docker.qcow2 Docker.poo
 2144  mv Docker.poo Docker.qcow2.bk
 2147  ./backend
 2159  sudo pip install flask_sqlalchemy
 2160  sudo python3 -m pip install flask_sqlalchemy
 2174  git commit -m "backend: update Dockerfile, app.py, requirments.txt"
 2177  $(docker-machine env)
 2185  shch /usr/bin/bash -c 'git checkout $1 && cat README' -
 2186  cor = shch /usr/bin/bash -c 'git checkout $1 && cat README' - -c 'git checkout $1 && cat README' -
 2187  git checkout $1
 2188  git checkout $1 && cat README
 2189  git checkout $1 && cat README.MD
 2190  git checkout master && cat README.ME
 2193  docker rmi b4bc9bff3ab5
 2194  docker rmi 04a1e29ce5c1
 2195  git checkout 0
 2196  git checkout -b 1_volume_mount
 2197  git commit -m "original Dockerfile and docker-compose.yml"
 2198  cd /Users/AJ/ws/CS373/docker/backend/
 2199  mv Dockerfile.3
 2200  mv Dockerfile.3.Dockerfile 55
 2201  mv 55 Dockerfile_2
 2204  docker rmi f32bc1c751de
 2205  docker rmi d8070ce7916d
 2206  docker rmi 394fad98abdb
 2207  docker rmi a3dd514dacb4
 2208  docker rmi bc6b48b68cc4
 2209  docker rmi 72e0b2fa284a
 2210  docker rmi c108429b7925
 2211  docker rmi de05628c0359
 2212  docker rmi 6906cb0878c8
 2213  docker rmi 2e2f6346c638
 2214  docker rmi 97eb30d14fba
 2216  docker-compose up --build &
 2217  docker-compose up  &
 2218  docker-compose up --help
 2219  docker rmi dee87ec94d6f
 2220  docker rmi e75b11472e1b
 2221  docker-compose up -d
 2222  docker attach -ti 82be9b0a235c
 2223  docker attach -ti 82be9b0a235c bash
 2224  docker attach -t 82be9b0a235c bash
 2225  docker attach -ti 73d1ac927ea8
 2226  docker attach --help
 2227  docker -ti attach 82be9b0a235c
 2228  docker -it attach 82be9b0a235c
 2229  docker -t attach 82be9b0a235c
 2230  docker attach 82be9b0a235c
 2232  docker rmi 54059bdf8da5
 2233  docker rmi ddda246f95b4
 2235  rm Docker.qcow2.bk
 2236  docker exec -ti idb_backend bash
 2240  git checkout backend_connect_database 
 2260  docker run -ti -p 5000:5000 -v $(PWD):/backend -w /backend idb_backend:latest bash
 2261  docker network --help
 2262  docker network connect idb_default idb_backend
 2263  docker network connect idb_default ed50bf3a9a8f
 2264  docker network inspect idb_default
 2265  docker network inspect
 2266  docker run -itd --network=idb_default -p 5000:5000 -v $(PWD):/backend -w /backend idb_backend:latest bash
 2267  docker stop peaceful_kowalevski
 2269  git commit -m "PetAPI: implement pet.find?id=int -- flask_restful and Marshmallow"
 2270  docker compose up --build -d
 2271  docker-compose up --build -d
 2274  git commit -m"backup before factoring the API code"
 2277  dcub -f docker-compose_v02.yml
 2282  git checkout -b 2_factoringAPI_backup
 2283  git commit -m"backup factoring API code for later"
 2284  git checkout 1_volume_mount 
 2285  git commit -m "Marshmallow: backup -- going to use query_schema.jsonify instead of query_schema.dump"
 2288  git checkout -b API
 2292  git checkout -b API-merge
 2294  git commit -m "backend reqs for API merge updated"
 2295  git commit -m"requirements.bkup.txt"
 2296  git checkout API 
 2305  git checkout -b API-merge origin/API-merge 
 2307  git checkout API
 2308  git checkout -b API-dev
 2310  docker networ ls
 2311  docker volume ls
 2315  git checkout app.py API-dev 
 2316  git checkout 0  API-dev 
 2318  docker rmi 37ce6cf02c7f
 2319  docker rmi 80bf96d3a37a
 2320  docker rmi 35e3d7708401
 2321  docker rmi 4532bfcd3f9b
 2322  docker rmi 524f7e2d09be
 2323  docker rmi 545dc0141d55
 2324  docker rmi 78d803e13854
 2325  docker rmi 97ff365b8ef1
 2326  docker rmi b2162de3da99
 2327  docker rmi 6fe6d2a6452e
 2328  docker rmi a8450b9d80c8
 2329  docker rmi b6099733a7f2
 2330  docker rmi bc7038212ac0
 2331  docker rmi 9796e7a32b49
 2332  docker rmi c713dee28d3a
 2333  docker rmi 24094d1cab71
 2334  docker rmi d44528925f5e
 2335  docker rmi b93fae93230d
 2336  docker rmi 2000766748b3
 2337  docker rmi 4704ded9fec5
 2339  docker rmi b2818f8e5ed0
 2340  docker-machine env
 2341  env | grep DOCKER
 2342  docker-machine start
 2344  ifconfig | gerp dock
 2345  ifconfig | grep dock
 2349  docker-machine down
 2350  docker-machine stop
 2351  docker rmi 6a6848c67002
 2368  git commit -m "practice hackerrank questions"
 2370  docker build yoshi1579/frontend-test
 2371  docker build yoshi1579/frontend-test .
 2372  docker yoshi1579/frontend-test .
 2373  docker yoshi1579/frontend-test
 2374  docker run yoshi1579/frontend-test
 2375  git checkout Selenium 
 2393  git add backend/app.py
 2394  cd checkout master
 2396  docker rmi db34f04cc133
 2397  git checkout API-merge 
 2399  docker exec -ti idb_backend:mount bash
 2400  docker exec -ti b0f1c2de8305
 2401  docker exec -ti b0f1c2de8305 bash
 2407  docker exec -ti 11ceb1e8d290 bash
 2408  docker exec -ti a433f82adb2a bash
 2409  docker exec -ti 3bdaeaf3a327 bash
 2410  docker build -t idb_backend:mount .
 2411  docker run -it --network=idb_default -p 5000:5000 -v $(PWD):/backend -w /backend idb_backend:mount bash
 2412  docker exec -ti 1ff7a0fa3a55 bash
 2413  git commit -m "backup"
 2417  docker rmi 9839ca7fa185
 2418  docker rmi 1c5b58dfec47
 2419  docker network ls
 2426  docker exec -ti 1ff7a0fa3a55 bash 
 2427  docker exec -ti 41456c32fc20 bash
 2433  git update-index --assume-unchanged docker-compose.yml
 2447  git commit -m"api now takes string instead of int"
 2457  git checkout API-dev 
 2466  git checkout 85-unit-tests-for-backend
 2471  git checkout 85-unit-tests-for-backend 
 2472  pip install flask-testing
 2473  pip install flask_testing
 2474  python3 -m pip install flask_testing
 2475  docker run -it -v $(PWD):/backend -w /backend ypshi1579/backend bash
 2476  docker pull yoshi1579/frontend-test
 2477  docker pull yoshi1579/backend
 2478  docker run -it -v $(PWD):/backend -w /backend yoshi1579/backend bash
 2479  docker run -it -v yoshi1579/backend bash
 2480  docker inspect yoshi1579/backend
 2481  docker inspect yoshi1579/backend | grep copy 
 2482  docker inspect yoshi1579/backend | grep . 
 2483  docker inspect yoshi1579/backend | grep COPY
 2484  docker inspect yoshi1579/backend | grep CMD
 2485  docker inspect yoshi1579/backend | grep CMD*
 2486  docker inspect yoshi1579/backend | grep python
 2487  docker inspect yoshi1579/backend 
 2488  function dc_trace_cmd() {\n  local parent=`docker inspect -f '{{ .Parent }}' $1` 2>/dev/null\n  declare -i level=$2\n  echo ${level}: `docker inspect -f '{{ .ContainerConfig.Cmd }}' $1 2>/dev/null`\n  level=level+1\n  if [ "${parent}" != "" ]; then\n    echo ${level}: $parent \n    dc_trace_cmd $parent $level\n  fi\n}
 2489  dc_trace_cmd yoshi1579/backend 
 2490  docker history 
 2491  docker history yoshi1579/backend 
 2492  docker run -v /var/run/docker.sock:/var/run/docker.sock \\n  centurylink/dockerfile-from-image ed0220cc52b0
 2493  docker run -v /var/run/docker.sock:/var/run/docker.sock \\n  yoshi1579/backend ed0220cc52b0
 2494  docker run -v /var/run/docker.sock:/var/run/docker.sock \\n  yoshi1579/backend latest
 2495  docker run -v /var/run/docker.sock:/var/run/docker.sock \\n  yoshi1579/backend
 2496  docker run -v /var/run/docker.sock:/var/run/docker.sock yoshi1579/backend
 2497  docker rmi a02ee43132b3
 2498  docker rmi 970eaf375dfd
 2499  docker rmi 286d76abc8d7
 2500  docker rmi b62855282fb4
 2501  docker run --rm -v /run/docker.sock yoshi1579/backend
 2502  docker run --rm -v /run/docker.sock:/run/docker.sock yoshi1579/backend
 2503  docker run --rm -v /run/docker.sock:/run/docker.sock yoshi1579/backend >> text.txt
 2505  docker pull centurylink/dockerfile-from-image
 2507  dfimage yoshi1579/backend:latest
 2508  alias dfimage="docker run --rm -v /var/run/docker.sock:/var/run/docker.sock centurylink/dockerfile-from-image"
 2509  alias dfimage="docker run --rm -v /var/run/docker.sock:/var/run/docker.sock yoshi1579/backend"
 2510  dfimage yoshi1579/backend
 2511  docker run --rm -v /var/run/docker.sock:/var/run/docker.sock centurylink/dockerfile-from-image bash
 2512  docker run --rm -v /var/run/docker.sock:/centurylink/dockerfile-from-image bash
 2513  cd /Users/AJ/ws/dockerregistry-master/
 2517  ./reg.py yoshi1579/backend
 2518  ./reg.py yoshi1579 backend
 2519  ./reg.py -o yoshi1579 -i backend -t latest
 2520  ./reg.py -o yoshi1579 -i backend -t latest -d
 2521  ./reg.py -o yoshi1579 -i backend -t latest --details
 2522  ./reg.py -o yoshi1579 -i backend -t latest -d true
 2523  ./reg.py -o yoshi1579 -i backend -t latest -d True
 2524  sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist
 2525  sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist
 2527  git checkout API-CI-Test
 2528  git checkout -b API-CI-Test
 2529  docker run -it yoshi1579/backend bash
 2530  docker run -it yoshi1579/frontend-test bash
 2557  /usr/local/bin/python3 /Users/AJ/ws/CS373/idb/backend/database.py
 2561  docker rmi e10651bda8e1
 2562  docker rmi bash
 2563  docker network prune
 2564  bash /usr/local/bin/python3 /Users/AJ/ws/CS373/idb/backend/tests.py
 2565  sudo bash /usr/local/bin/python3 /Users/AJ/ws/CS373/idb/backend/tests.py
 2569  docker run -it -p 5000:5000 -v $(PWD):/backend -w /backend idb_backend:latest bash
 2573  docker run -it --network=idb_default -p 5000:5000 -v $(PWD):/backend -w /backend yoshi1579/frontend-test bash
 2575  docker build -t idb_postman:latest .
 2576  docker run -it postman
 2577  docker run -it idb_postman
 2578  docker push idb_postman
 2579  export DOCKER_ID_USER="ajipsum"
 2580  docker login
 2581  docker tag idb_postman:latest
 2582  docker tag ajipsum/idb_postman:latest
 2583  docker tag idb_postman $DOCKER_ID_USER/idb_postman:latest
 2584  docker push $DOCKER_ID_USER/idb_postman:latest
 2600  git checkout ~/$(PWD)/app.py origin/master 
 2601  git checkout ~/$(PWD)app.py origin/master 
 2602  git checkout ~/$(pwd)/backend/app.py origin/master 
 2603  git checkout app.py master 
 2604  git checkout app.py origin master 
 2605  git checkout app.py origin:master 
 2606  git checkout app.py origin/HEAD 
 2607  git checkout app.py
 2608  git checkout app.py origin/master 
 2609  git checkout origin/master app.py 
 2611  git commit -m "Postman Tests Passing; Docs stll need Work"
 2618  git commit -m "Postman Unit Tests and Docs Final I think"
 2623  git commit -m "Postman backup"
 2624  git commit -m "autopep8 backend files"
 2625  docker stop 85e83d4bb870
 2626  docker build -t idb_backend:latest .
 2627  git commit -m "Backend unittests added: 36 total"
 2630  python3 -m pip install Mock
 2631  python3 -m pip install mock
 2634  python3 -m pip install flask-cors
 2665  cat package.json
 2675  jenkins stop
 2676  service jenkins stop
 2678  cd QlikSenseD3ZoomableSunburst-master
 2690  bower install <package>
 2711  git checkout -b D3-dev
 2725  git commit -m"csv api working"
 2727  docker run -it --network=idb_default -p 5000:5000 -v $(PWD):/backend -w /backend idb_backend:latest bash
 2736  git checkout 110-simple-us-map-d3-for-our-app 
 2737  git checkout D3-dev 
 2744  /usr/local/bin/python3 /Users/AJ/ws/CS373/idb/backend/tests.py
 2754  cat makefile
 2760  cd backend
 2788  git checkout -b tmp
 2792  docker stop $(docker ps -q)
 2793  git checkout tmp
 2796  git update-index --no-assume-unchanged docker-compose.yml
 2804  cd /Library/Application\ Support/Jenkins
 2807  sudo rm /var/root/.jenkins 
 2808  sudo rm /var/root/.jenkins  ~/.jenkins
 2809  sudo rm -f -r /var/root/.jenkins  ~/.jenkins
 2810  sudo rm -rf /Users/Shared/Jenkins\n
 2811  sudo dscl . -delete /Groups/jenkins
 2812  sudo rm -f /etc/newsyslog.d/jenkins.conf
 2813  pkgutil --pkgs | grep 'org\.jenkins-ci\.' | xargs -n 1 sudo pkgutil --forget
 2814  sudo rm /Library/LaunchDaemons/org.jenkins-ci.plist
 2815  sudo dscl . -delete /Users/jenkins
 2828  which docker
 2829  docker --version
 2830  sudo docker images
 2833  brew link node
 2834  docker install astyle
 2840  docker pull gpdowning/gcc
 2841  docker run -it -v /Users/AJ/ws/cs371/git:/thisfolder -w /thisfolder gpdowning/gcc
 2842  docker run -it -v /Users/AJ/ws/cs371/git/examples/c++:/thisfolder -w /thisfolder gpdowning/gcc
 2894  make TestCollatz.pyx
 2899  brew install cppcheck
 2911  mkdir buid
 2913  cmake -G"Unix Makefile"
 2914  cmake -G"Unix Makefile" ..
 2915  cmake -G "Unix Makefile" ..
 2916  cmake  all
 2920  mkdir gtest
 2922  cmake CMakeLists.txt ../gtest
 2928  cmake install gtest
 2932  cmake CMakeLists.txt
 2933  cmake 
 2951  ./a.out > input2k.txt
 2952  g++ generator.c++ > output2k.txt
 2953  ./a.out <  input2k.txt
 2954  ./a.out > input10k.txt
 2955  ./a.out < input10k.txt
 2956  ./a.out > input100k.txt
 2957  ./a.out < input100k.txt
 2958  ./a.out < input100k.txt > temp.txt
 2961  ./a.out > input50k.txt
 2962  ./a.out < input50k.txt
 2963  ./a.out < input50k.txt > temp.txt
 2981  git commit -m "Use stack instead of util.Stack"
 2982  git commit -m "Use util.Stack instead of stack"
 2993  mkdir ryan
 2995  make docker
 3015  git checkout 5e4a57b
 3026  git commit -m "run make Collatz.log"
 3041  git checkout -b search
 3056  git commit -m "Q6: 703 but autograder not picking up"
 3061  git commit -m "Q6: 703 but autograder not picking up ?"
 3074  git checkout -b multiagent
 3095  python pacman.py -l trickySearch -p AStarFoodSearchAgent
 3098  python pacman.py --frameTime 0 -p ReflexAgent -k 1\n
 3099  python pacman.py --frameTime 0 -p ReflexAgent -k 3\n
 3101  git checkout search
 3103  v .zshrc_aliases_docker
 3106  javac ch4_05_dijkstra.java
 3107  java ch4_05_dijkstra
 3115  /usr/local/bin/python3 "/Users/AJ/Desktop/Competitive Programming 3/node.py"
 3127  brew uninstall jenkins
 3128  brew uninstall jenkins-lts
 3129  which jinkens
 3130  which jenkins
 3133  sudo port uninstall jenkins
 3139  port uninstall jenkins
 3142  python pacman.py --frameTime 0 -p ReflexAgent -k 2
 3152  Ok
 3154  Did you try the fork bomb
 3155  you sould try it. it might work
 3156  I dk
 3159  k
 3161  git checkout search 
 3167  git checkout -b reinforcement
 3187  cd week1_programming_challenges
 3203  make cleam
 3204  git checkout multiagent 
 3205  git commit -m"makefile"
 3221  python gridworld.py -a value -i 100 -k 10
 3234  python gridworld.py -a q -k 5 -m
 3236  python gridworld.py -a q -k 5
 3239  python gridworld.py -a q -k 50 -n 0 -g BridgeGrid -e 1
 3240  python gridworld.py -a q -k 50 -n 0 -g BridgeGrid -e 0
 3241  python gridworld.py -a q -k 50 -n 0 -g BridgeGrid -e 0.5
 3252  python gridworld.py -a value -i 5\n\nvalue iteration with k=5
 3274  git checkout -b contest
 3280  python capture.py --player2 KeyboardAgent2python capture.py --player2 KeyboardAgent2
 3281  python capture.py --player2 KeyboardAgent2
 3285  python capture.py -r BaselineAgents -b BaselineAgents --redOpts first=keys
 3302  git checkout reinforcement
 3303  git checkout reinforcement 
 3336  make .PHONY
 3337  make clean_curdir
 3338  echo make clean
 3339  echo (make clean)
 3340  echo $(make clean)
 3342  make clea
 3355  git commit -m"Add: .gitignore; README.txt; makefile"
 3401  git commit -m"p04-ghostbusters-tracking and p05-classification"
 3407  cd p04-ghostbusters-tracking
 3434  git checkout bester
 3435  git checkout buster
 3436  git checkout busters 
 3437  git checkout -b ghostbusters
 3457  git commit -m"all working"
 3458  git checkout con
 3465  git checkout ghostbusters
 3487  git commit -m"still working on my agent "
 3488  git commit -m"still working on my agent: lossing"
 3497  git checkout contest 
 3498  git checkout 5430d5f
 3504  git checkout classification 
 3521  git checkout contest
 3522  killall finder
 3523  killall Finder
 3525  sudo killall Finder
 3556  /usr/local/bin/python3 /Users/AJ/ws/00_Data_Structures_and_Algorithms_Specialization/01algo_toolbox/week1_programming_challenges/1_sum_of_two_digits/APlusB.py
 3560  git clone --bare git@github.com:devdattakulkarni/CloudComputing.git
 3565  git clone git@github.com:devdattakulkarni/CloudComputing.git
 3637  brew link --overwrite node
 3640  brew link --overwrite docker
 3641  brew link --overwrite docker-macine
 3642  brew link --overwrite docker-machine
 3643  brew link --overwrite docker-compose
 3644  brew link --overwrite vim
 3650  brew link --overwrite pip
 3652  rm /usr/local/lib/libgmock.a
 3653  rm /usr/local/lib/libgmock_main.a /usr/local/lib/libgtest.a /usr/local/lib/libgtest_main.a
 3656  rm /usr/local/lib/pkgconfig/gmock.pc\n  /usr/local/lib/pkgconfig/gmock_main.pc\n  /usr/local/lib/pkgconfig/gtest.pc\n  /usr/local/lib/pkgconfig/gtest_main.pc
 3657  sudo rm /usr/local/lib/pkgconfig/gmock.pc\n  /usr/local/lib/pkgconfig/gmock_main.pc\n  /usr/local/lib/pkgconfig/gtest.pc\n  /usr/local/lib/pkgconfig/gtest_main.pc
 3658  sudo -H rm /usr/local/lib/pkgconfig/gmock.pc\n  /usr/local/lib/pkgconfig/gmock_main.pc\n  /usr/local/lib/pkgconfig/gtest.pc\n  /usr/local/lib/pkgconfig/gtest_main.pc
 3659  rm /usr/local/lib/pkgconfig/gmock_main.pc
 3660  rm /usr/local/lib/pkgconfig/gtest.pc
 3661  rm /usr/local/lib/pkgconfig/gtest_main.pc
 3673  brew link vim
 3683  rm '/usr/local/lib/python2.7/site-packages/pip/_internal/utils/logging.py'
 3684  sudo rm '/usr/local/lib/python2.7/site-packages/pip/_internal/utils/logging.py'
 3691  brew docktor
 3695  brew link python2
 3696  brew link python3
 3730  brew install automake
 3761  /usr/bin/python -m pip install automake autoconf libtool
 3776  git clone git clone git@bitbucket.org:AJSoud/assignment1.git
 3777  git clone git@bitbucket.org:AJSoud/assignment1.git
 3779  mkdir common
 3784  git commit -m"look for imageID instead of hard coding"
 3796  git commit -m'all working'
 3821  pip3 install click
 3829  python3 EmailCLI.py --greeting <greeting> Oyetoke Hey, Oyetoke
 3830  python3 EmailCLI.py --greeting <dgfd> Oyetoke
 3831  python3 EmailCLI.py --greeting  Oyetoke
 3832  python3 EmailCLI.py --greeting <gerrting> Oyetoke
 3836  /usr/local/bin/python3 /Users/AJ/ws/361security/git/assignment1/EmailCLI.py --search k;jh;dsjfa
 3846  pip3 check future
 3847  pip3 check __future__
 3860  mkdir mourad
 3873  git checkout 3ee47d2
 3882  j desk
 3884  pip3 check double_playfair_cipher
 3885  python3 EmailCLI.py --greeting <greeting> Oyetoke
 3891  cd /usr/local/lib/python3.7/site-packages/double-playfair-cipher.egg-link
 3892  cd /usr/local/lib/python3.7/site-packages/
 3900  git commit -m'all working but need to work on the security group'
 3909  git commit -m'working'
 3913  git remote add git clone https://ajipsum@bitbucket.m/assignment1.git
 3914  git remote add upstream git@bitbucket.org:ajipsum/assignment1.git
 3916  git remote add origin git@bitbucket.org:ajipsum/assignment1.git
 3918  git clone git@bitbucket.org:ajipsum/assignment1.git
 3934  mkdir VM
 3994  mkdir bitbuckerKartik
 3995  cd bitbuckerKartik
 3996  git clone git clone git@bitbucket.org:kartik894/assignment6.git
 3997  git clone git@bitbucket.org:kartik894/assignment6.git
 4017  v makefile
 4018  v Makefile
 4019  make insall
 4020  mak run
 4026  make uninstall
 4041  python3 pyinquirer_checkbox.py
 4051  touch Makefile
 4064  git checkout b untouched
 4065  git checkout -bb untouched
 4066  git checkout -b untouched
 4075  sshfs nvidia@192.168.8.1:~/catkin_ws/ /Users/AJ/ws_ros -o volname=ws_ros
 4081  git checkout -b hw1
 4087  export PATH=/Users/myuser/Library/Android/sdk/platform-tools:$PATH
 4088  export ANDROID_SDK=/Users/myuser/Library/Android/sdk
 4090  cd ~/Library/Android/sdk/platform-tools
 4092  sudo cp ~/Library/Android/Sdk/platform-tools/adb /usr/bin
 4093  sudo cp ~/Library/Android/Sdk/platform-tools/adb /usr/bin/
 4094  sudo -H cp ~/Library/Android/Sdk/platform-tools/adb /usr/bin/
 4096  sudo cp /Users/AJ/Library/Android/Sdk/platform-tools/adb /usr/bin
 4098  sudo cp /Users/AJ/Library/Android/sdk/platform-tools/adb /usr/bin
 4099  sudo -i cp /Users/AJ/Library/Android/sdk/platform-tools/adb /usr/bin
 4101  sudo -i cp /Users/AJ/Library/Android/sdk/platform-tools/adb /usr/local/bin
 4112  bash -c 'clear; cd "/Users/AJ/ws/VisualStudio/Projects/test/test/bin/Debug"; "/Library/Frameworks/Mono.framework/Versions/5.16.0/bin/mono32"  --debug --debugger-agent=transport=dt_socket,address=127.0.0.1:51590  "/Users/AJ/ws/VisualStudio/Projects/test/test/bin/Debug/test.exe" ; echo $? > /var/folders/11/lhh89__j7jz7m57tp8ylyfn00000gp/T/tmp65ab3cdf.tmp; echo; read -p "Press any key to continue..." -n1; exit'; exit
 4113  bash -c 'clear; cd "/Users/AJ/ws/VisualStudio/Projects/test/test/bin/Debug"; "/Library/Frameworks/Mono.framework/Versions/5.16.0/bin/mono32"  --debug --debugger-agent=transport=dt_socket,address=127.0.0.1:51610  "/Users/AJ/ws/VisualStudio/Projects/test/test/bin/Debug/test.exe" ; echo $? > /var/folders/11/lhh89__j7jz7m57tp8ylyfn00000gp/T/tmp506c8f6.tmp; echo; read -p "Press any key to continue..." -n1; exit'; exit
 4115  mkdir Xamarin
 4116  sudo mkdir Xamarin
 4118  mkdir jdk
 4119  sudo mkdir jdk
 4123  bash -c 'clear; cd "/Users/AJ/ws/VisualStudio/Projects/test/test/bin/Debug"; "/Library/Frameworks/Mono.framework/Versions/5.16.0/bin/mono32"  --debug --debugger-agent=transport=dt_socket,address=127.0.0.1:51735  "/Users/AJ/ws/VisualStudio/Projects/test/test/bin/Debug/test.exe" ; echo $? > /var/folders/11/lhh89__j7jz7m57tp8ylyfn00000gp/T/tmp69620a2e.tmp; echo; read -p "Press any key to continue..." -n1; exit'; exit
 4124  xcodebuild -sdk -version
 4138  $ git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k
 4144  sudo mkdir -p ~/.config/powerline-shell && \\npowerline-shell --generate-config > ~/.config/powerline-shell/config.json
 4192  catkin_ws make
 4199  git remote add origin git clone git@bitbucket.org:ajipsum/assignment2.git
 4202  git remote add origin git@bitbucket.org:ajipsum/assignment2.git
 4204  mkdir 22
 4207  git clone git@bitbucket.org:ajipsum/assignment2.git
 4257  aws s3 mb s3://mybucket --region us-west-1
 4267  aws s3 rm s3://lksadjh
 4351  cat u1.txt.bak.1550115999077
 4352  mv u1.txt.bak.1550115999077 u1.txt
 4370  mv u1.txt.bak.1550116769796 1.txt
 4378  cat 1.txt.bak.1550120376819
 4472  sshfs nvidia@192.168.8.1:/home/nvidia/catkin_ws /Users/AJ/ws_ros -o volname=ws_ros
 4482  brew install cmake
 4484  brew tap homebrew/core # VTK5
 4488  sudo -H python2 -m pip install -U wstool rosdep rosinstall rosinstall_generator rospkg catkin-pkg sphinx
 4492  mkdir ~/ros_catkin_ws
 4493  cd ~/ros_catkin_ws
 4495  sshfs nvidia@192.168.8.1:/home/nvidia/catkin_ws /Users/AJ/ws_ros -o volname=ws_ros
 4497  rosrun race kill
 4510  rosdep install --from-paths src --ignore-src --skip-keys python-wxtools --rosdistro kinetic -y
 4539  brew link
 4540  brew link -f
 4541  brew link docker
 4542  brew link lolcat
 4543  brew link --overwrite lolcat
 4544  brew link --overwrite awscli
 4563  brew link --force tinyxml2@6.2.0\n
 4575  python3 -m pip install catkin_pkg empy git+https://github.com/lark-parser/lark.git@0.7d pyparsing pyyaml setuptools argcomplete
 4577  mkdir -p ~/ros2_install
 4592  git clone https://github.com/mikepurvis/ros-install-osx.git\ncd ros-install-osx\n./install
 4606  git commit -m'First deadline: all working'
 4628  git checkout -b macos
 4664  mv 1.txt.bak.1550120492290 1\ 1\ .txt
 4677  mv 1.txt.bak.1550120492290 1\ 1\ .txt
 4765  cd homework
 4792  sshfs nvidia@192.168.8.1:/home/nvidia/catkin_ws /Users/AJ/ws_ros -o volname=ws_ros
 4794  sshfs nvidia@192.168.8.1:/home/nvidia/catkin_ws /Users/AJ/ws_ros -o volname=ws_ros
 4795  l;hlkj;
 4798  git rm --cached catkin_ws/src/zed-ros-wrapper
 4800  git add --cached catkin_ws/src/zed-ros-wrapper
 4801  git add catkin_ws/src/zed-ros-wrapper
 4821  git checkout master 
 4832  git checkout hw1 
 4888  sshfs nvidia@192.168.8.1:/home/nvidia/catkin_ws /Users/AJ/ws_ros -o volname=ws_ros
 4890  sshfs nvidia@192.168.8.1:/home/nvidia/catkin_ws /Users/AJ/ws_ros -o volname=ws_ros
 4892  sshfs nvidia@192.168.8.1:/home/nvidia/catkin_ws /Users/AJ/ws_ros -o volname=ws_ros
 4894  catkin_make clean
 4896  sshfs nvidia@192.168.8.1:/home/nvidia/catkin_ws /Users/AJ/ws_ros -o volname=ws_ros
 4898  sshfs nvidia@192.168.8.1:/home/nvidia/catkin_ws /Users/AJ/ws_ros -o volname=ws_ros
 4921  make
 4922  python3 crack.py
 4928  python3 crack.py
 4933  python3 crack.py
 4937  python3 crack.py
 4938  make
 4939  python3 crack.py
 4942  python3 crack.py
 4952  tar -c race/src race/CMakeLists.txt hw1.tar
 4964  tar -cvf hw1.tar race/CMakeLists.txt
 4967  mkdir tart
 4969  mkdir tar
 5033  tar -rvf hw1.tar race/CMakeLists.txt
 5063  j Desk
 5079  sshfs soud@luna-moth.cs.utexas.edu:/projects/coursework /Users/AJ/ws_utlab_luna -o volname=ws_utlab_luna
 5080  sshfs soud@luna-moth.cs.utexas.edu:/projects/coursework/ /Users/AJ/ws_utlab_luna -o volname=ws_utlab_luna
 5084  sshfs soud@luna-moth.cs.utexas.edu:/projects/coursework/2018-spring/cs378-mok/ /Users/AJ/ws_utlab_luna -o volname=ws_utlab_luna
 5087  git clone git@bitbucket.org:ajipsum/assignment3.git
 5132  docker images
 5133  docker ps
 5134  docker images
 5135  docker rm $(docker ps -q -a)
 5136  docker ps 
 5137  docker ps -q -a
 5138  docker ps -a
 5139  docker rmi 714a62696ad3
 5140  docker images
 5141  docker rmi 4f758e894f5c
 5142  docker images
 5143  docker rmi 617817408e89
 5144  docker images
 5145  docker rmi ab9ec9f41c70
 5146  docker images
 5147  docker rmi cc5e4efc34de
 5148  docker images
 5149  docker rmi 292ed8dee366
 5150  docker rmi 5ef80646a20f
 5151  docker rmi 29831ba76d93
 5152  docker rmi 5ef80646a20f
 5153  docker rmi ba96e0b9aeb6
 5154  docker images
 5155  docker rmi 66bc0f66b7af
 5156  docker images
 5157  docker rmi 29831ba76d93
 5158  docker rmi 5628b73efe4e
 5159  docker images
 5160  docker rmi 292ed8dee366
 5161  docker rmi 5ef80646a20f
 5162  docker rmi 17453243214e
 5163  docker images
 5164  docker rmi 292ed8dee366
 5165  docker rmi 5ef80646a20f
 5166  docker rmi 29831ba76d93
 5167  docker rmi 95fcc89adbf5
 5168  docker rmi 30ad57d27317
 5169  docker rmi f496aeb089b4
 5170  docker images
 5171  docker rmi 30ad57d27317
 5172  docker rmi ed0220cc52b0
 5173  docker images
 5174  docker rmi c84a044fc39d
 5175  docker images
 5176  docker rmi 30ad57d27317
 5177  docker rmi 5ef80646a20f
 5178  docker rmi 6b768184270c92d67798a817cff6a39\n ~/ws 
 5179  docker rmi 6b768184270c92d67798a817cff6a39\n ~/ws \n ~/ws 
 5180  docker rmi 6b768184270c92d67798a817cff6a3\n ~/ws \n ~/ws 
 5181  docker rmi 6b768184270c92d67798\n ~/ws \n ~/ws 
 5182  docker imr \nError: No such image: 6b768184270c92d67798a817cff6a39
 5183  docker rmi 292ed8dee366
 5184  docker images
 5185  docker rmi 30ad57d27317
 5186  docker rmi 29831ba76d93
 5187  docker rmi \n
 5188  docker rmi 970eaf375dfd\n
 5189  docker images
 5191  docker rmi 30ad57d27317
 5192  docker rmi - f30ad57d27317
 5193  docker rmi -f 30ad57d27317
 5194  docker images
 5195  docker rmi -f 292ed8dee366
 5196  docker images
 5197  docker rmi 29831ba76d93
 5198  docker images
 5199  docker ps
 5200  docker pu
 5201  docker ps
 5213  docker build -t gcr.io/${PROJECT_ID}/greetings:v1 .
 5215  docker build -t gcr.io/${PROJECT_ID}/greetings:v1 .
 5216  dicker images
 5217  docker images
 5218  gcloud components install kubectl
 5219  docker build -t ${PROJECT_ID}/assignment3:v1 .
 5220  docker imaages
 5221  docker images
 5222  docker rmi 8db1e0830817
 5223  docker images
 5224  docker build -t ${PROJECT_ID}/assignment3:v1 .
 5225  gcloud docker -- push ${PROJECT_ID}/assignment3:v1
 5226  gcloud auth configure-docker
 5227  docker images
 5229  docker rmi 237fea1e4681
 5230  docker images
 5231  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5232  gcloud docker -- push gcr.io/${PROJECT_ID}/assignment3:v1
 5234  gcloud sql instances create instance1 --tier=db-f1-micro --authorized-networks=0.0.0.0/0
 5245  kubectl create -f deployment.yaml
 5246  kubectl delete -f deployment.yaml
 5247  kubectl create -f deployment.yaml
 5248  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer asignment3-deployment
 5249  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignment3-deployment
 5250  kubectl get services
 5251  kubectl get deployments
 5252  kubectl get pods
 5253  kubectl describe pods assignment3-deployment-d94f76b9f-dfz2s
 5254  kubectl get services
 5255  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5256  docker -- push gcr.io/${PROJECT_ID}/assignment3:v1
 5257  dockerpush gcr.io/${PROJECT_ID}/assignment3:v1
 5258  docker push gcr.io/${PROJECT_ID}/assignment3:v1
 5259  kubectl create -f greetings-deployment.yaml
 5260  kubectl create -f deployment.yaml
 5261  kubectl delete -f deployment.yaml
 5262  kubectl create -f deployment.yaml
 5263  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignment3-deployment
 5264  kubectl get services
 5265  kubectl get deployments
 5266  kubectl get pods
 5267  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5268  docker push gcr.io/${PROJECT_ID}/assignment3:v1
 5269  kubectl get services
 5270  kubectl delete -f deployment.yaml
 5271  kubectl create -f deployment.yaml
 5272  docker run -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5275  docker run -p 5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5276  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5277  docker run -p 5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5278  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5279  docker run -p 5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5280  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5281  docker run -p 5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5282  docker run -p 5000:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5284  kubectl delete -f deployment.yaml
 5286  kubectl get services
 5287  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5288  docker push gcr.io/${PROJECT_ID}/assignment3:v1
 5289  kubectl get services
 5290  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5291  docker push gcr.io/${PROJECT_ID}/assignment3:v1
 5292  kubectl delete -f deployment.yaml
 5293  kubectl create -f deployment.yaml
 5294  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5296  gcloud docker -- push gcr.io/${PROJECT_ID}/assignment3:v1
 5297  kubectl create -f deployment.yaml
 5298  kubectl delete -f deployment.yaml
 5299  kubectl create -f deployment.yaml
 5300  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5301  docker run -p 5000:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5303  docker rm $(docker ps -q -a)
 5304  docker run -p 5000:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5305  docker run -p 5000:80 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5306  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5307  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5308  docker run -p 80:5000 -it-
 5309  docker run -p 80:5000 -it
 5310  docker run -p 80:5000 -it -v gcr.io/cs38-cloudcomputing/assignment3:v1
 5311  docker run -p 80:5000 -it  gcr.io/cs38-cloudcomputing/assignment3:v1
 5312  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5313  docker push gcr.io/${PROJECT_ID}/assignment3:v1
 5314  kubectl delete -f deployment.yaml
 5315  kubectl create -f deployment.yaml
 5316  gcloud docker -- push gcr.io/${PROJECT_ID}/assignment3:v1
 5317  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5318  docker push gcr.io/${PROJECT_ID}/assignment3:v1
 5319  kubectl delete -f deployment.yaml
 5320  kubectl create -f deployment.yaml
 5323  gcloud compute ssh gke-assignment3-default-pool-2ad6efe7-1lfb --internal-ip
 5324  gcloud compute ssh gke-assignment3-default-pool-2ad6efe7-1lfb
 5327  gcloud compute ssh gke-assignment3-default-pool-2ad6efe7-1lfb
 5328  kubectl get services
 5329  docker push gcr.io/${PROJECT_ID}/assignment3:v1
 5330  docker push gcr.io/${PROJECT_ID}/assignment3:v2
 5331  docker build -t gcr.io/${PROJECT_ID}/assignment3:v2 .
 5332  kubectl delete -f deployment.yaml
 5333  docker push gcr.io/${PROJECT_ID}/assignment3:v2
 5334  kubectl delete -f deployment.yaml
 5335  kubectl create -f deployment.yaml
 5336  docker ps
 5337  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5339  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5345  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5347  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5354  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5356  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3:v1
 5359  git commit -m'update_movie is now working'
 5364  git commit -m'update_movie still working; changed sql string formate for more readability'
 5366  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5367  docker push gcr.io/${PROJECT_ID}/assignment3:v1
 5368  kubectl delete -f deployment.yaml
 5369  kubectl create -f deployment.yaml
 5370  kubectl get services
 5371  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5372  docker build -t gcr.io/${PROJECT_ID}/assignment3:v3 .
 5373  docker images
 5374  docker imr 8885b2870199
 5375  docker rmi 8885b2870199
 5376  docker stop $(docker ps -aq)
 5377  docker images
 5378  docker rmi 8885b2870199
 5379  docker rmi -f 8885b2870199
 5380  docker images
 5381  docker rmi 842417290490
 5382  docker rmi -f 842417290490
 5385  docker rm 842417290490
 5386  docker ps
 5387  docker container ls
 5388  docker container 
 5389  docker images
 5390  docker rmi -f c311eb3c1242
 5391  docker images
 5392  docker rmi -f 297c080b98e6
 5393  docker images
 5394  docker rmi -f 29f323c69158
 5395  docker images
 5396  docker rmi -f 3eca2550b7b0
 5397  docker images
 5398  docker rmi -f c960ea3d2413
 5399  docker images
 5400  docker rmi -f 4da35d339138
 5401  docker rmi -f 946880c1c147
 5402  docker images
 5403  docker build -t gcr.io/${PROJECT_ID}/assignment3:v3 .
 5405  kubectl delete -f deployment.yaml
 5406  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5407  docker push gcr.io/${PROJECT_ID}/assignment3:v1
 5408  kubectl create -f deployment.yaml
 5409  kubectl delete -f deployment.yaml
 5410  kubectl create -f deployment.yaml
 5411  kubectl get services
 5412  kubectl get pods
 5413  kubectl delete -f deployment.yaml
 5414  kubectl create -f deployment.yaml
 5415  kubectl get pods
 5422  docker images
 5423  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5426  docker rmi d7b3844c1ac9
 5427  docker build -t gcr.io/${PROJECT_ID}/assignment3:v1 .
 5428  docker push gcr.io/${PROJECT_ID}/assignment3:v1
 5429  kubectl get pods
 5430  kubectl delete -f deployment.yaml
 5431  kubectl get pods
 5432  kubectl get services
 5433  docker push gcr.io/${PROJECT_ID}/assignment3:v1
 5434  kubectl create -f deployment.yaml
 5435  kubectl get services
 5436  kubectl get pods
 5437  kubectl delete -f deployment.yaml
 5438  docker push gcr.io/${PROJECT_ID}/assignment3:v2
 5439  docker build -t gcr.io/${PROJECT_ID}/assignment3:v2 .
 5440  docker push gcr.io/${PROJECT_ID}/assignment3:v2
 5441  kubectl delete -f deployment.yaml
 5442  kubectl create -f deployment.yaml
 5443  kubectl delete -f deployment.yaml
 5444  docker build gcr.io/${PROJECT_ID}/assignment3:v3 .
 5445  docker build gcr.io/${PROJECT_ID}/assignment3 .
 5446  docker build -t gcr.io/${PROJECT_ID}/assignment3 .
 5449  kubectl delete -f deployment.yaml
 5450  gcloud docker push gcr.io/${PROJECT_ID}/assignment3
 5451  docker push gcr.io/${PROJECT_ID}/assignment3
 5452  kubectl create -f deployment.yaml
 5453  kubectl get pods
 5454  kubectl get services
 5459  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5460  gcloud docker -- push gcr.io/${PROJECT_ID}/greetings:v1
 5461  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5462  docker push gcr.io/${PROJECT_ID}/assignment3:v1
 5464  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5466  kubectl get services
 5467  kubectl get pods
 5469  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5471  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5476  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5482  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5483  docker st
 5486  git commit -m'I think I'm done'
 5487  git commit -m'I think I am done.'
 5490  docker build -t gcr.io/${PROJECT_ID}/assignment3 .
 5495  docker build -t gcr.io/${PROJECT_ID}/assignment3 .
 5496  docker push gcr.io/${PROJECT_ID}/assignment3
 5497  kubectl delete -f deployment.yaml
 5498  kubectl create -f deployment.yaml
 5501  whois techkraken.com
 5504  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5517  docker build -t gcr.io/${PROJECT_ID}/assignment3 .
 5518  docker push gcr.io/${PROJECT_ID}/assignment3
 5519  docker build -t gcr.io/${PROJECT_ID}/assignment3 .
 5520  docker push gcr.io/${PROJECT_ID}/assignment3
 5524  docker stop $(docker ps -aq)
 5525  docker stop $(docker ps -a -q)
 5529  docker rmi -f a69ba197cfa3
 5531  docker rmi -f 3f1a5d8b99fd
 5533  docker stop $(docker ps -a -q)
 5534  docker ps
 5535  docker ps -a
 5536  docker rm $(docker ps -a -q)
 5537  docker container ls
 5538  docker ps -a
 5539  docker ps -a -q
 5540  docker ps -a 
 5541  docker build -t gcr.io/${PROJECT_ID}/assignment3 .
 5542  kubectl delete -f deployment.yaml
 5543  kubectl create -f deployment.yaml
 5544  kubectl delete -f deployment.yaml
 5547  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5549  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5550  kubectl create -f deployment.yaml
 5552  nc stack.overflow.fail 9004
 5565  kill -9 7205
 5567  kill -9 7276
 5569  kill -9 6613
 5583  cd catkin_ws/src/tar
 5592  git checkout -b hw2
 5597  git clone git@bitbucket.org:albertwj/inv_pendulum_simulator.git
 5614  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5615  docker
 5616  docker start
 5617  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5618  docker
 5619  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5621  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5631  kubectl delete -f deployment.yaml
 5632  docker build -t gcr.io/${PROJECT_ID}/assignment3 .
 5633  docker push gcr.io/${PROJECT_ID}/assignment3
 5634  kubectl create -f deployment.yaml
 5637  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5643  sudo groupadd docker
 5644  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 5646  cat Makefile
 5647  make
 5648  ./crack.py
 5649  python3 ./crack.py
 5657  git checkout -b two-square-cipher
 5663  git checkout -b differential-attack
 5668  git push --set-upstream originhub differential-attack 
 5683  python3 ./crack.py
 5685  python3 ./crack.py
 5686  make
 5687  python3 ./crack.py
 5689  python3 ./crack.py
 5691  python3 ./crack.py
 5701  rm diff_attack.tar.gz
 5708  make
 5709  python3 ./crack.py
 5716  python3 ./crack.py
 5717  make
 5718  python3 ./crack.py
 5719  /usr/local/bin/python3 /Users/AJ/ws/ctci/geeksforgeeks/sub_array_sum.py
 5721  /usr/local/bin/python3 /Users/AJ/ws/ctci/geeksforgeeks/sub_array_sum.py
 5724  python3 ./crack.py
 5725  /usr/local/bin/python3 /Users/AJ/ws/security/assignments/02/crack.py
 5727  /usr/local/bin/python3 /Users/AJ/ws/security/assignments/02/crack.py
 5731  python3 /Users/AJ/ws/security/assignments/02/crack.py
 5733  make
 5734  python3 ./crack.py
 5735  /usr/local/bin/python3 /Users/AJ/ws/security/assignments/02/crack.py
 5738  /usr/local/bin/python3 /Users/AJ/ws/security/assignments/02/crack.py
 5740  /usr/local/bin/python3 /Users/AJ/ws/security/assignments/02/crack.py
 5763  brew unlink python && brew link python
 5766  git checkout -b differential-attack_aj
 5769  git push --set-upstream originhub differential-attack_aj 
 5774  python3 ./crack.py
 5781  python3 ./crack.py
 5788  kill -9 19279
 5798  cd Users/AJ/Library/Python/3.7/lib/python/site-packages/pwnlib/tubes/
 5799  cd Users/AJ/Library/Python/3.7/lib/python/site-packages/pwnlib/
 5800  cd /Users/AJ/Library/Python/3.7/lib/python/site-packages/pwnlib/
 5803  cd /Users/AJ/Library/Python/3.7/lib/python/site-packages/pwnlib/
 5808  python3 ./crack.py
 5809  make
 5810  python3 ./crack.py
 5815  brew link
 5816  brew link numpy
 5819  brew link numpy
 5820  where docker
 5827  make 
 5828  python ./crack.py
 5829  python3 ./crack.py
 5830  python ./crack.py
 5838  python ./crack.py
 5839  python3 ./crack.py
 5840  python ./crack.py
 5849  python ./crack.py
 5850  python3 ./crack.py
 5853  python ./crack.py
 5854  amke
 5855  make
 5856  python3 ./crack.py
 5858  /usr/local/bin/python3 /Users/AJ/ws/security/assignments/02/crack.py
 5859  sshluna/usr/local/bin/python3 /Users/AJ/ws/security/assignments/02/crack.py
 5860  /usr/local/bin/python3 /Users/AJ/ws/security/assignments/02/crack.py
 5861  /usr/local/bin/python2 /Users/AJ/ws/security/assignments/02/crack.py
 5863  kill -9 99418
 5865  kill -9 99538
 5872  make
 5873  python3 ./crack.py
 5874  python ./crack.py
 5878  git checkout -b differential-attack 
 5879  python ./crack.py
 5880  python3 ./crack.py
 5881  python2 ./crack.py
 5882  python ./crack.py
 5883  python2 ./crack.py
 5888  git checkout -b differential-attack 
 5889  git checkout -b differential-attack
 5890  git checkout differential-attack
 5891  python2 ./crack.py
 5892  make
 5893  python2 ./crack.py
 5898  git checkout differential-attack_aj
 5899  python2 ./crack.py
 5900  git checkout differential-attack_aj
 5901  python2 ./crack.py
 5902  make
 5903  python2 ./crack.py
 5905  python2 ./crack.py
 5907  python2 ./crack.py
 5909  ./encrypt_user_key
 5910  make
 5911  python2 ./crack.py
 5912  make
 5913  python2 ./crack.py
 5914  make all
 5915  python2 ./crack.py
 5916  make
 5917  make all
 5918  python2 ./crack.py
 5919  make
 5920  python2 ./crack.py
 5921  make
 5922  python2 ./crack.py
 5923  ./encrypt_user_key
 5924  python2 ./crack.py
 5926  kill -9 43611
 5927  python2 ./crack.py
 5929  make
 5930  python2 ./crack.py
 5931  make
 5932  python2 ./crack.py
 5933  make
 5934  python2 ./crack.py
 5938  python2 ./crack.py
 5939  make
 5940  python2 ./crack.py
 5941  make
 5942  python2 ./crack.py
 5943  make all
 5944  python2 ./crack.py
 5948  rm encrypt_user_key
 5949  cd diff_attack
 5952  make
 5953  make all
 5954  python2 ./crack.py
 5955  make
 5956  python2 ./crack.py
 5964  mkdir tar
 5974  make clean
 5975  make
 5982  make
 5983  python2 ./crack.py
 5985  git reset --hard originhub/differential-attack_aj 
 5986  make 
 5987  python2 ./crack.py
 5988  python3 ./crack.py
 5989  git reset --hard originhub/differential-attack_aj 
 5990  make
 5992  python3 ./crack.py
 5993  python2 ./crack.py
 5994  python3 ./crack.py
 5995  python2 ./crack.py
 6005  tar -czvf diff_attack.tar.gz ./diff_attack
 6006  cd diff_attack
 6007  python2 ./crack.py
 6008  make
 6009  python2 ./crack.py
 6010  make
 6011  python2 ./crack.py
 6012  make
 6013  python2 ./crack.py
 6014  python3 ./crack.py
 6015  python2 ./crack.py
 6016  cd diff_attack
 6017  make
 6019  python2 ./crack.py
 6020  python3 ./crack.py
 6022  python3 ./crack.py
 6023  make
 6024  python3 ./crack.py
 6025  make
 6026  python3 ./crack.py
 6030  git checkout differential-attack
 6031  python3 ./crack.py
 6032  python2 ./crack.py
 6033  cd diff_attack
 6034  make
 6036  python2 ./crack.py
 6037  python3 ./crack.py
 6038  python2 ./crack.py
 6039  python3 ./crack.py
 6040  cd diff_attack
 6041  make
 6042  python3 ./crack.py
 6043  python2 ./crack.py
 6044  make
 6045  python2 ./crack.py
 6046  python3 ./crack.py
 6054  python3 ./crack.py
 6056  git checkout differential-attack_aj
 6057  python3 ./crack.py
 6058  make
 6063  make 
 6064  python3 ./crack.py
 6065  git checkout master 
 6066  git checkout differential-attack
 6068  python3 ./crack.py
 6091  \t\t\t\t\tgit branch --set-upstream-to=origin/<branch> differential-attack
 6092  git branch --set-upstream-to=origin/differential-attack differential-attack
 6097  git checkout differential-attack_aj
 6099  git checkout master
 6128  make
 6129  make server
 6130  make client
 6131  /usr/local/bin/python3 /Users/AJ/Desktop/hi.py
 6133  make client
 6135  cd Desktop
 6152  git clone git@bitbucket.org:ajipsum/assignment4.git
 6259  kubectl get services
 6260  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer deployment
 6261  kubectl create -f deployment.yaml
 6262  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer deployment
 6263  kubectl delete -f deployment.yaml
 6264  kubectl create -f deployment.yaml
 6265  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignemt4-deployment
 6266  kubectl delete -f deployment.yaml
 6267  kubectl create -f deployment.yaml
 6268  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignemt4-deployment
 6269  kubectl get services
 6270  kubectl get pods
 6271  docker push gcr.io/${PROJECT_ID}/assignment3
 6272  docker build -t gcr.io/${PROJECT_ID}/assignment4 .
 6273  docker images
 6275  docker images
 6276  docker stop $(docker ps -a -q)
 6277  docker container ls
 6278  docker images
 6279  docker build -t gcr.io/${PROJECT_ID}/assignment4 .
 6280  docker images
 6281  docker rmi b9c509be69fd
 6282  docker container
 6283  docker container ls
 6284  docker container stop
 6285  docker container stop $(docker ps -a -q)
 6286  docker container stop -f $(docker ps -a -q)
 6287  docker - fcontainer stop $(docker ps -a -q)
 6288  docker -f container stop $(docker ps -a -q)
 6289  docker container -f stop $(docker ps -a -q)
 6290  docker container stop $(docker ps -a -q)
 6291  sduo docker container stop $(docker ps -a -q)
 6292  sudo docker container stop $(docker ps -a -q)
 6293  docker rmi -f b9c509be69fd
 6294  docker images
 6295  docker stop $(docker ps -a -q)
 6296  docker stop $(docker ps -a)
 6297  docker push gcr.io/${PROJECT_ID}/assignment4
 6298  kubectl delete -f deployment.yaml
 6299  kubectl create -f deployment.yaml
 6300  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignemt4-deployment
 6301  kubectl get 
 6302  kubectl get pods
 6303  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignemt4-deployment
 6304  kubectl get services
 6305  kubectl get pods
 6306  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignemt4-deployment
 6307  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignemt3-deployment
 6308  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer deployment
 6309  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignment4
 6310  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignment-4
 6311  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignment4-deployment
 6312  kubectl get pods
 6313  kubectl get services
 6325  git commit -m'Update README and .ignore - assignment4 app and Jenkins server are now running'
 6327  kubectl get services
 6328  kubectl get pods
 6329  kubectl get adress
 6330  kubectl get deployments
 6349  kubectl get deployments
 6350  kubectl get services
 6351  kubectl get ingress
 6362  kubectl expose deployment assignment4 --target-port=5000 --type=NodePort
 6363  kubectl expose deployment assignment4-deployment --target-port=5000 --type=NodePort
 6364  kubectl expose deployment assignment4-deployment --target-port=5000 --type=NodePort\n
 6365  kubectl delete deployment assignment4-deployment
 6366  kubectl delete service assignment4-deployment
 6367  kubectl delete ingress assignment4-ingress
 6368  kubectl get ingress
 6373  kubectl get ingress
 6376  kubectl get services
 6377  kubectl get ingress
 6378  kubectl get services
 6379  kubectl apply -f ingress.yaml
 6380  kubectl get ingress
 6386  kubectl get ingress
 6387  kubectl get services
 6395  kubectl get services
 6396  kubectl get ingress
 6397  kubectl delete -f deployment.yaml
 6398  kubectl get ingress
 6399  kubectl get services
 6400  kubectl get pods
 6401  kubectl get services
 6402  kubectl get deployments
 6403  kubectl get services
 6404  kubectl delete service assignment4-deployment
 6405  kubectl delete ingress assignment4-ingress
 6406  kubectl get services
 6407  kubectl get pods
 6408  kubectl get deployments
 6411  git commit -m'Jenkins Test'
 6413  kubectl get deployments
 6414  kubectl get pods
 6415  kubectl get get ser
 6416  kubectl get services
 6419  git commit -m'Jenkins Test'
 6422  kubectl get services
 6423  kubectl get pods
 6424  kubectl get deployments
 6425  kubectl get ingress
 6426  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignment4-deployment
 6427  kubectl get ingress
 6428  kubectl get deployments
 6429  kubectl get services
 6430  kubectl expose deployment assignment4-deployment --target-port=5000 --type=NodePort\n
 6431  kubectl expose deployments --target-port=5000 --type=NodePort\n
 6432  kubectl expose deployment assignment4-deployment --target-port=5000 --type=NodePort\n
 6433  kubectl expose \n
 6434  kubectl expose deployments --target-port=5000 --type=NodePort\n
 6435  kubectl expose deployment assignment4-deployment --target-port=5000 --type=NodePort
 6436  kubectl expose deployments --port=80 --target-port=5000 --type=LoadBalancer assignment4-deployment
 6437  kubectl get services
 6438  kubectl get ingress
 6441  git commit -m'Jenkins Test: README'
 6443  kubectl get ingress
 6444  kubectl get deployments
 6445  kubectl get services
 6446  kubectl get pods
 6452  git commit -m'Jenkins up and running now'
 6462  make && make server & ; make client ; kill -9 -$!
 6464  kill -9 $!
 6465  kill -9 -$!
 6467  make && make server & ; make client ; kill -9 -$!
 6470  make && make server & ; make client ; kill -9 -$!
 6473  make && make server & ; make client ; kill -9 -$!
 6474  make run
 6476  make run
 6478  make run
 6480  make run
 6482  kill -9 -$!
 6484  kill -9 -30484
 6485  kill -9 30484
 6487  make
 6488  make run
 6490  kill -9 -$!
 6492  kill -9 31242
 6493  make run
 6495  kill -9 31698
 6496  make run
 6498  kill -9 31934
 6499  make run
 6500  kill -9 -$!
 6501  make run
 6503  kill -9 32171
 6504  make run
 6506  kill -9 32617
 6507  make run
 6508  sh kill -9 $!
 6509  sh kill -9 -$!
 6511  kill -9 32849
 6512  make run
 6514  kill -9 33239
 6515  make run
 6517  kill -9 33503
 6518  make run
 6520  kill -9 33747
 6522  make run
 6525  kill -9 34110
 6526  make run
 6528  kill -9 34425
 6529  make run
 6531  kill -9 34655
 6532  make run
 6534  kill -9 34923
 6535  make run
 6537  kill -9 ControlServer.PID
 6538  sudo kill -9 ControlServer.PID
 6545  kill -9 35193
 6546  make run
 6548  kill -9 $$(cat $
 6549  kill -9 $(cat $
 6550  kill -9 cat $!
 6552  kill -9 36262
 6553  make run
 6555  kill -9 36873
 6556  make run
 6558  kill -9 37116
 6559  make run
 6562  kill -9 -$!
 6563  kill -9 37366
 6564  make run
 6566  kill -9 37773
 6567  make run
 6569  make run
 6571  make run
 6573  kill -9 39322
 6574  kill -9 39358
 6575  make run
 6580  kill -9 -39702
 6581  kill -9 39702
 6583  make run
 6585  kill -9 -40507
 6586  kill -9 40507
 6588  kill -9 40543
 6590  make run
 6592  kill -9 41702
 6593  make run
 6595  make run
 6597  make run
 6599  make
 6601  make run
 6603  kill -9 42769
 6604  make run
 6606  kill -9 43263
 6608  make run
 6610  kill -9 43621
 6611  make run
 6613  kill -9 44078
 6614  make run
 6616  kill -9 44336
 6617  make run
 6619  kill -9 44582
 6621  make run
 6623  kill -9 44957
 6625  make run
 6627  kill -9 45299
 6628  make run
 6633  kill -9 45552
 6634  make run
 6636  kill -9 46064
 6638  make run
 6640  kill -9 46534
 6641  make run
 6643  kill -9 46813
 6644  make run
 6646  kill -9 47102
 6647  make run
 6649  kill -9 47349
 6650  make run
 6652  kill -9 47620
 6653  make run
 6655  kill -9 47877
 6656  make run
 6658  kill -9 48190
 6659  make run
 6661  kill -9 48525
 6662  make run
 6664  kill -9 48868
 6665  make run
 6667  kill -9 49209
 6668  make run
 6670  kill -9 49561
 6671  make run
 6673  kill -9 49967
 6674  make run
 6676  kill -9 50220
 6677  make run
 6679  kill -9 50468
 6680  make run
 6682  kill -9 50761
 6683  make run
 6685  kill -9 51079
 6686  make run
 6688  kill -9 51332
 6689  make run
 6691  kill -9 51593
 6692  make run
 6694  kill -9 51861
 6695  make run
 6697  kill -9 $!
 6700  kill -9 52113
 6701  make
 6702  make server
 6703  kill -9 -$!
 6706  kill -9 -$!
 6713  make
 6714  make server
 6715  make client
 6717  make client
 6724  kill -9 -$!
 6725  kill -9 55324
 6728  kill -9 55324
 6731  kill -9 54292
 6732  kill -9 55841
 6736  kill -9 v
 6737  kill -9 56263
 6740  kill -9 $!
 6741  kill -9 56555
 6746  make run
 6747  make stop
 6749  kill -9 58086
 6750  make stop
 6751  make run
 6753  kill -9 58529
 6756  make run
 6762  make run
 6764  make end
 6765  kill -9 $!
 6766  kill -9 -$!
 6768  kill -- 59582
 6769  pkill 
 6771  make run
 6773  pkill ControlServer.PID
 6776  pkill java 
 6778  make run
 6779  kill %1
 6783  kill -9 $pgid
 6784  pkill $pgid
 6786  pkill java\ Con
 6792  kill %1
 6807  killall -9 java
 6809  make run
 6810  make end
 6812  make run
 6814  make run
 6815  make q1
 6817  make q1
 6818  make all
 6821  make q1
 6823  make q1
 6832  make q1
 6839  make q1
 6843  make q1
 6845  make q1
 6849  make q1
 6851  make q1
 6853  make q1
 6855  make q1
 6857  make q1
 6860  make q1
 6870  make q1
 6872  make q1
 6875  make q1
 6881  make q1
 6883  (cd q1) make
 6884  (cd q1) make all
 6885  (cd) make all
 6886  (cd) q1 make all
 6887  make q1
 6889  make q1
 6890  mkdir q2
 6891  make q2
 6892  make q1
 6893  make q2
 6894  make q1
 6896  make q2
 6897  make all
 6899  make q2
 6916  make q1
 6919  make q2
 6927  make q1
 6928  make q2
 6931  make q2
 6933  make q1
 6940  make
 6941  nake clean
 6942  make clean
 6946  make clean
 6947  make q2
 6948  make clean
 6950  make clean
 6951  make q1
 6952  make q2
 6953  make q1
 6969  git checkout hw2q2
 6970  git checkout hw2q1
 6987  git checkout hw1
 6996  cd catkin_ws
 7002  git checkout remove 
 7004  git checkout hw2
 7007  git checkout hw2
 7008  git checkout hw1
 7009  git checkout untouched 
 7011  git chcckout hw1
 7012  git checkout hw1
 7013  git checkout hw2
 7014  make q1
 7015  sh -i "../cloud-computing-a4-jenkins.pem" ubuntu@ec2-3-82-153-198.compute-1.amazonaws.com153-198.compute-1.amazonaws.com
 7016  make q1
 7038  git commit -m'updated makefiles'
 7040  make q2
 7041  make q1
 7042  make q2
 7043  make q1
 7044  make q2
 7048  make q2
 7051  make q2
 7057  make q3
 7059  git add makefile
 7061  git add q1/makefile
 7062  git add q2/makefile
 7063  git add q3/makefile
 7065  git commit -m'update makefiles'
 7066  make q3
 7070  make q3
 7074  git commit -m'q3 works'
 7077  make q3
 7080  make q2
 7081  make q1
 7083  make q1
 7088  make q1
 7090  pkill -9 sh.PID
 7092  pkill -9 java.PID
 7094  pkill -9 java
 7095  pkill -9 -java
 7097  make q3
 7117  make clean
 7119  make clean
 7123  make clean
 7124  make q1
 7125  make q2
 7127  make q2
 7128  make q3
 7130  make q3
 7131  make clean
 7134  make clean
 7145  make clean
 7147  git add makefile
 7160  make clean
 7163  make clean
 7170  make q3
 7178  make clean
 7181  make clean
 7186  kubectl get pods
 7188  kubectl get pods
 7189  kubectl logs assignment4-deployment-7df874dd9f-bk4hb
 7200  kubectl logs assignment4-deployment-7df874dd9f-bk4hb
 7201  kubectl get pods
 7202  kubectl logs assignment4-deployment-7df874dd9f-8zttx
 7229  git checkout origin/differential-attack_aj 
 7234  git reset --hard origin/differential-attack_aj 
 7236  git reset --hard origin/differential-attack_aj
 7238  git checkout differential-attack_aj 
 7242  git push --set-upstream origin differential-attack_aj
 7246  git checkout differential-attack
 7249  git checkout master
 7276  git checkout master
 7285  git checkout differential-attack_aj 
 7290  git checkout master
 7292  git checkout two-square-cipher 
 7303  make run
 7306  make run
 7308  git checkout master
 7316  git checkout master
 7325  git checkout differential-attack
 7329  git push --set-upstream origin differential-attack
 7335  git checkout differential-attack_aj
 7337  git branch --set-upstream-to=origin/differential-attack_aj differential-attack 
 7340  git branch --set-upstream-to=origin/differential-attack_aj differential-attack_aj
 7345  git checkout differential-attack
 7346  git branch --set-upstream-to=origin/differential-attack differential-attack
 7354  git checkout -b article_review
 7361  rm Makefile
 7362  rm crack.py
 7364  rm diff_attack
 7366  rm encrypt_user_key.c
 7367  rm -rf diff_attack
 7398  kubectl delete -f deployment.yaml
 7399  kubectl get deployments
 7400  kubectl config set project cs38-cloudcomputing
 7402  kubectl get deployments
 7411  kubectl config set project cs38-cloudcomputing
 7413  kubectl get deployments
 7414  kubectl config set project cs38-cloudcomputing
 7416  kubectl get deployments
 7417  kubectl get services
 7419  kubectl get pods
 7420  kubectl config list
 7421  kubectl config ls
 7422  kubectl config -h
 7423  kubectl config set -h
 7424  kubectl config set profile ajipsum
 7425  kubectl config set profile "ajipsum"
 7426  kubectl config set profile
 7427  kubectl config set profile "ajipsum" .
 7428  kubectl config set profile ajipsum .
 7429  kubectl config set profile ajipsum
 7430  kubectl config set project cs38-cloudcomputing
 7431  kubectl config set project 'cs38-cloudcomputing'
 7432  kubectl config set project _cs38-cloudcomputing
 7434  kubectl config set -h
 7435  kubectl config -h
 7436  kubectl config currentcontext
 7437  kubectl config current-context
 7438  kubectl config use-context gke_cs38-cloudcomputing_us-central1-b_assignment3
 7439  kubectl get deployments
 7440  kubectl delete -f deployment.yaml
 7441  kubectl delete deployment assignment3-deployment
 7442  kubectl get pods
 7443  kubectl get services
 7444  kubectl get deployments
 7445  kubectl delete service assignment3-deployment
 7446  kubectl delete service kubernetes
 7447  kubectl get deployments
 7448  kubectl get services
 7449  kubectl delete service kubernetes
 7450  kubectl config current-context
 7451  kubectl delete service kubernetes
 7452  kubectl get services
 7453  kubectl get deployments
 7455  kubectl get deployments
 7456  kubectl get pods
 7457  kubectl config use-context gke_cs38-cloudcomputing-4_us-central1-b_assignment4
 7458  kubectl get de
 7459  kubectl get deployments
 7475  make clean
 7476  make q1
 7477  make q2
 7478  make q3
 7480  make q1
 7481  make q2
 7482  make clean
 7485  make q2
 7486  make q3
 7488  docker build -t gcr.io/${PROJECT_ID}/assignment4 .
 7489  docker images
 7490  docker ps
 7492  docker run gcr.io/cs38-cloudcomputing/assignment3
 7493  docker run -p 80:5000 -it -v ${PWD}:/src -w /src gcr.io/cs38-cloudcomputing/assignment3
 7494  docker run gcr.io/cs38-cloudcomputing/assignment3 bash
 7495  docker run gcr.io/cs38-cloudcomputing/assignment3 bass
 7496  docker run gcr.io/cs38-cloudcomputing/assignment3 bash
 7497  docker run gcr.io/cs38-cloudcomputing/assignment3 sh
 7498  docker run gcr.io/cs38-cloudcomputing/assignment3 bash "python3"
 7499  docker run gcr.io/cs38-cloudcomputing/assignment3
 7500  docker run gcr.io/cs38-cloudcomputing-4/assignment4 bash
 7501  docker images
 7502  docker run ubuntu bash
 7503  docker run ubuntu
 7504  docker ps
 7505  docker stop $(docker ps -a)
 7506  docker stop -f $(docker ps -a)
 7507  docker -f stop $(docker ps -a)
 7508  docker stop $(docker ps -a)
 7509  docker run ubuntu bash
 7510  docker run gcr.io/cs38-cloudcomputing-4/assignment4 bash
 7511  docker run gcr.io/cs38-cloudcomputing/assignment3 bash
 7512  docker run gcr.io/cs38-cloudcomputing/assignment3 bash "cd"
 7513  docker run gcr.io/cs38-cloudcomputing/assignment3 bash "cd .."
 7514  docker ps
 7515  docker container list
 7516  docker container ls
 7517  docker run -it gcr.io/cs38-cloudcomputing/assignment3 bash
 7518  docker images
 7519  docker rmi 94e814e2efa8
 7520  docker rmi -f 94e814e2efa8
 7521  docker images
 7522  docker ps
 7523  docker stop $(docker ps -a)
 7529  opencvexport PKG_CONFIG_PATH="/usr/local/opt/opencv@3/lib/pkgconfig"
 7530  export PKG_CONFIG_PATH="/usr/local/opt/opencv@3/lib/pkgconfig"
 7543  kubectl get ingress
 7559  kilall teskgated
 7560  killall teskgated
 7561  killall taskgated
 7562  killall taskgated]
 7563  killall taskgated
 7567  ps x | grep task
 7568  man8 taskgated
 7569  man taskgated
 7570  taskgated
 7571  killall taskgated
 7573  killall taskgated
 7575  killall taskgated
 7577  j desktop
 7579  git clone git@bitbucket.org:ajipsum/assignment4.git
 7583  kubectl get services
 7584  kubectl delete deployment.yaml
 7585  kubectl delete -f deployment.yaml
 7586  kubectl get deployment
 7587  kubectl get deployments
 7588  kubectl get services
 7589  kubectl delete services
 7590  kubectl get ingress
 7591  docker images
 7592  docker rmi -f 5dbc3f318ea5
 7593  docker images
 7594  docker rmi -f 78240f63eff1
 7595  docker rmi -f 17a05f46a483
 7596  docker rmi -f 5dbc3f318ea5
 7597  docker images
 7598  docker stop $(docker ps -a)
 7603  docker stop $(docker ps -a)
 7605  docker stop $(docker ps -a -q)
 7606  docker stop -f $(docker ps -a -q)
 7607  docker -f stop $(docker ps -a -q)
 7608  docker stop -h
 7609  docker stop --help
 7610  docker images
 7613  sudo docker stop -f $(docker ps -a -q)
 7614  sudo docker stop $(docker ps -a -q)
 7615  docker system prune --volumes
 7616  docker container rm $(docker container ls -a -q)
 7617  docker container prune
 7618  docker container images
 7619  docker container imagesdocker container stop $(docker container ls -aq)
 7620  docker system prune
 7621  docker system prune --volumes
 7624  brew link python
 7639  cd /usr/local/lib/python3.7/site-packages
 7648  echo /usr/local/opt/opencv/lib/python3.6/site-packages >> /usr/local/lib/python3.7/site-packages/opencv3.pth
 7659  cd lib/python3.7/site-packages
 7663  mkdir cv
 7666  mkvirtualenv cv-py3 -p python3
 7668  mkvirtualenv cv-py3 -p python3
 7680  mkvirtualenv cv-py3 -p python3
 7692  workon cv-py3
 7696  pip install numpy scipy scikit-image matplotlib scikit-learn
 7697  pip3 install numpy scipy scikit-image matplotlib scikit-learn
 7698  cd ~/.virtualenvsexport/cv-py3/lib/python3.7/site-packages
 7700  cd /usr/local/opt/opencv@3/lib/python3.7/site-packages/
 7704  cd /usr/local/opt/opencv@3/lib/python3.7/site-packages/cv2  
 7716  mkvirtualenv cv3 -p python3
 7719  kill -9 28033
 7720  killall -9 code\ helper
 7721  killall -9 "code helper"
 7726  mkvirtualenv cv3 -p python3
 7729  workon cv3
 7762  ^[[200~$ git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k
 7763  git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k
 7764  rm -fr /Users/AJ/.oh-my-zsh/custom/themes/powerlevel9k
 7765  git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k
 7774  rm -fr /Users/AJ/.oh-my-zsh/custom/themes/powerlevel9k
 7779  workon cv3
 7794  mkdir -p ~/.config/powerline-shell && \\npowerline-shell --generate-config > ~/.config/powerline-shell/config.json
 7798  workon cv3
 7802  workon cv3
 7806  workon cv3
 7812  workon cv3
 7831  ks
 7834  git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k
 7838  workon cv3
 7859  mkdir -p ~/.config/powerline-shell && \\npowerline-shell --generate-config > ~/.config/powerline-shell/config.json
 7908  cd /Users/AJ/Library/Python/3.7/lib/python/site-packages/
 7926  mkdir ~/.config/powerline
 7939  git clone https://github.com/zsh-users/zsh-docker.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-docker
 7940  cd ~/.oh-my-zsh/custom/plugins/zsh-docker
 7943  rm -rf zsh-docker
 7944  git clone https://github.com/zsh-users/zsh-docker.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-docker
 7946  cd zsh-docker
 7950  docker images
 7979  workon cv3
 7998  cat /Users/AJ/Library/Python/3.7/lib/python/site-packages/powerline/bindings/zsh/powerline.zsh
 8008  workon cv3
 8020  powerline-daemon -kill
 8021  powerline-daemon -k
 8028  powerline-daemon -kpython -V
 8031  cdcd /Users/AJ/Library/Python/2.7/lib/python/site-packages/powerline/bindings/
 8032  open /Users/AJ/Library/Python/2.7/lib/python/site-packages/powerline/bindings/
 8044  /Users/AJ/ws/macos-terminal-themes/solarized/osx-terminal.app-colors-solarized/Solarized\ Dark\ ansi.terminal; exit
 8048  cd /usr/local/lib/python2.7/site-packages/powerline_shell
 8049  cd /usr/local/lib/python2.7/site-packages/
 8061  powerline-daemon -k
 8067  workon cv3
 8079  workon cv3
 8083  brew tap homebrew/cask-fonts && brew cask install font-source-code-pro
 8159  ks
 8228  echo /usr/local/opt/opencv/lib/python3.7/site-packages
 8229  echo /usr/local/lib/python3.6/site-packages/opencv3.pth
 8230  cat /usr/local/lib/python3.6/site-packages/opencv3.pth
 8231  cd /usr/local/lib/python3.6/site-packages/
 8232  cat /usr/local/lib/python3.7/site-packages/opencv3.pth
 8233  python3 -m pip install numpy scipy scikit-image matplotlib scikit-learn
 8234  ccd cd ~/.virtualenvs/cv/lib/python3.7/site-packages/
 8235  cd ~/.virtualenvs/cv/lib/python3.7/site-packages/
 8242  mkvirtualenv cv -p python3
 8243  workon cv
 8249  mkvirtualenv cv -p python3
 8250  workon cv
 8255  cd lib/python3.7/site-packages
 8257  cat /usr/local/lib/python3.7/site-packages/opencv3.pth
 8259  cd /usr/local/opt/opencv@3/lib/python3.7/site-packages/cv2  
 8263  ln -s /usr/local/opt/opencv@3/lib/python3.7/site-packages/cv2.cpython-36m-darwin.so cv2.so
 8264  workon cv
 8266  pip install numpy scipy scikit-image matplotlib scikit-learn
 8273  cat known_hosts
 8277  mkdir chris
 8279  v key
 8282  chmod 400 key
 8284  v key
 8285  chmod 400 key
 8287  v key
 8289  chmod 400 key
 8291  ssh -i key ubuntu@54.161.195.47
 8292  ssh -i key ubuntu@3.83.81.230
 8294  v key
 8295  ssh -i key ubuntu@3.83.81.230
 8296  v key
 8297  ssh -i key ubuntu@3.83.81.230
 8298  kubectl get ingress
 8300  brew cask install minikube
 8301  brew link --overwrite kubernetes-cli
 8302  where kubectl
 8308  minikube
 8313  brew install kubernetes-cli
 8314  brew reinstall kubernetes-cli
 8317  cat _kubectl
 8325  test mkdir huuu
 8330  test -d "${GOPATH}" || mkdir "${GOPATH}"
 8335  test -d "${GOPATH}" || mkdir "${GOPATH}"
 8343  test -d "${GOPATH}" || mkdir "${GOPATH}"
 8345  t -d "${GOPATH}/src/github.com" || mkdir -p "${GOPATH}/src/github.com"
 8346  test -d "${GOPATH}/src/github.com" || mkdir -p "${GOPATH}/src/github.com"
 8351  test -d "${GOPATH}" || mkdir "${GOPATH}"
 8352  test -d "${GOPATH}/src/github.com" || mkdir -p "${GOPATH}/src/github.com"
 8361  test -d "${GOPATH}" || mkdir "${GOPATH}"
 8362  test -d "${GOPATH}/src/github.com" || mkdir -p "${GOPATH}/src/github.com"
 8369  test -d "${GOPATH}" || mkdir "${GOPATH}"
 8374  test -d "${GOPATH}" || mkdir "${GOPATH}"
 8375  mkdir "$HOME/ws/.go"
 8381  where kubectl
 8382  sudo rm -rf /Users/AJ/Downloads/google-cloud-sdk
 8383  kubectl config
 8384  kubectl config ls
 8385  kubectl config list
 8386  kubectl proxy | tee /Users/AJ/.vscode/extensions/ms-kubernetes-tools.vscode-kubernetes-tools-0.1.18/out/src/components/kubectl/proxy.out
 8387  kubectl config current-context
 8388  kubectl config view
 8389  kubectl config delete-cluster gke_cs38-cloudcomputing-4_us-central1-b_assignment4
 8390  kubectl config view
 8391  kubectl config delete-cluster gke_cs38-cloudcomputing_us-central1-b_assignment3
 8392  kubectl config view
 8393  kubectl config delete-cluster gke_cs38-cloudcomputing-4_us-central1-b_assignment4
 8400  minikube
 8401  minikube ip
 8402  minikube config
 8403  minikube config view
 8410  brew install hyperkit
 8411  sudo -rf rm '/usr/local/bin/hyperkit'
 8412  sudo rm -rf '/usr/local/bin/hyperkit'
 8413  brew install hyperkit
 8414  brew link hyperkit
 8415  hyperkit --help
 8421  opam install uri qcow.0.10.4 conduit.1.0.0 lwt.3.1.0 qcow-tool mirage-block-unix.2.9.0 conf-libev logs fmt mirage-unix prometheus-app
 8423  sudo dtrace -l -P 'hyperkit$target' -p $(pgrep hyperkit)
 8424  sudo dtrace -l -p 'hyperkit$target' -p $(pgrep hyperkit)
 8427  sudo dtrace -l -P 'hyperkit$target' -p $(pgrep hyperkit)
 8428  minikube start
 8429  minikube service
 8430  minikube get service
 8431  minikube config set vm-driver hyperkit
 8432  minikube config view
 8434  kubectl get service
 8435  kubectl config view
 8436  minikube stop
 8438  cd .minikube
 8447  cd minikube
 8450  open boot2docker.iso
 8455  open minikube
 8456  minikube delete
 8457  minikube start
 8458  hyperkit --help
 8459  minikube start
 8460  curl -LO https://storage.googleapis.com/minikube/releases/latest/docker-machine-driver-hyperkit \\n&& sudo install -o root -g wheel -m 4755 docker-machine-driver-hyperkit /usr/local/bin/
 8462  open minikube
 8464  open minikube
 8466  minikube start
 8467  hyperkit -h
 8470  screen ~/Library/Containers/com.docker.docker/Data/vms/0/tty
 8475  kubectl config view
 8476  minikube dashboard
 8477  brew install kubernetes-cli
 8478  kubectl get nodes
 8479  git clone https://github.com/saturnism/gcp-live-k8s-visualizer.git
 8480  cd cd gcp-live-k8s-visualizer
 8481  cd gcp-live-k8s-visualizer
 8483  kubectl proxy --www=.
 8484  kubectl run busybox --image=hypriot/rpi-busybox-httpd -l visualize=true,run=busybox
 8488  kubectl apply -f "https://cloud.weave.works/k8s/scope.yaml?k8s-version=$(kubectl version | base64 | tr -d '\n')"
 8495  git clone https://github.com/weaveworks/scope
 8498  kubectl apply -f examples/k8s
 8499  kubectl port-forward svc/weave-scope-app -n weave 4040:80
 8505  cd gcp-live-k8s-visualizer
 8508  kubectl apply -f "https://cloud.weave.works/k8s/scope.yaml?k8s-version=$(kubectl version | base64 | tr -d '\n')"
 8510  kubectl proxy --www=.
 8512  kubectl port-forward svc/weave-scope-app -n weave 4040:80
 8513  minikube stop
 8514  kubectl get nodes
 8515  minikube delete
 8516  minikube get clustor
 8517  minikube start
 8524  cd k8s
 8527  kubectl port-forward svc/weave-scope-app -n weave 4040:80
 8528  kubectl port-forward -n weave "$(kubectl get -n weave pod --selector=weave-scope-component=app -o jsonpath='{.items..metadata.name}')" 4040
 8529  kubectl apply -f "https://cloud.weave.works/k8s/scope.yaml?k8s-version=$(kubectl version | base64 | tr -d '\n')"
 8530  kubectl port-forward svc/weave-scope-app -n weave 4040:80
 8531  kubectl get nodes
 8532  kubectl get pds
 8533  kubectl get pods
 8534  kubectl get service
 8535  kubectl get ingress
 8536  kubectl get deployments
 8537  minikube stop
 8540  ps x | grep -i dock
 8541  kill 72982
 8542  hyperkit -h
 8543  hyperkit stop
 8544  hyperkit -h
 8545  docker-machine config
 8546  docker
 8547  docker-machine config
 8548  docker images
 8549  docker-compose config
 8550  docker-machine ip
 8551  docker-machine config
 8552  hyperkit -h
 8553  hyperkit
 8554  hyperkit view
 8555  hyperkit list
 8556  hyperkit ip
 8557  sudo dtrace -l -P 'hyperkit$target' -p $(pgrep hyperkit)
 8558  docker config
 8559  docker ls
 8560  docker config ls
 8561  docker config inspect
 8562  docker config ls
 8563  docker nodes
 8564  docker ls
 8565  docker images
 8566  docker ps
 8567  docker container ls
 8568  docker node
 8569  docker node ls
 8570  docker node PS
 8571  kubectl version
 8572  eval $(minikube docker-env) 
 8573  ps -Af | grep hyperkit
 8575  ps -Af | grep hyperkit | grep tty
 8581  git checkout mster
 8582  git checkout master
 8584  git checkout hw2
 8590  git checkout master
 8591  git checkout hw3
 8592  git checkout hw2
 8594  make clean
 8598  git checkout master
 8604  git checkout hw2
 8612  git checkout master
 8616  git checkout hw1
 8621  git checkout -b hw3
 8635  git commit -m "hw3 kind of ready"
 8636  git commit -m'hw3 kind of ready'
 8650  rm catkin_ws/src/color_tracking/.DS_Store
 8654  git commit -m'hw3 kind of ready'
 8658  git checkout hw1
 8659  git checkout hw3
 8668  git checkout hw3
 8680  cd catkin_ws
 8696  git checkout master
 8698  git checkout hw3
 8699  git checkout master
 8700  git checkout hw3
 8706  cd catkin_ws
 8713  git checkout hw3-tmp
 8740  minikube start
 8741  minikube dashboard
 8743  minikube dashboard
 8746  kubectl apply -f "https://cloud.weave.works/k8s/scope.yaml?k8s-version=$(kubectl version | base64 | tr -d '\n')"
 8747  kubectl port-forward svc/weave-scope-app -n weave 4040:80
 8748  kubectl port-forward -n weave "$(kubectl get -n weave pod --selector=weave-scope-component=app -o jsonpath='{.items..metadata.name}')" 4040
 8749  kubectl apply -f "https://cloud.weave.works/k8s/scope.yaml?k8s-version=$(kubectl version | base64 | tr -d '\n')"
 8750  kubectl apply -f examples/k8s
 8756  kubectl apply -f examples/k8s
 8758  kubectl apply -f examples/k8s
 8759  kubectl apply -f "https://cloud.weave.works/k8s/scope.yaml?k8s-version=$(kubectl version | base64 | tr -d '\n')"
 8760  minikube dashboard
 8761  minikube stop
 8762  minikube start
 8763  minikube dashboard
 8764  kubectl port-forward svc/weave-scope-app -n weave 4040:80
 8765  kubectl apply -f examples/k8s
 8766  kubectl apply -f "https://cloud.weave.works/k8s/scope.yaml?k8s-version=$(kubectl version | base64 | tr -d '\n')"
 8767  kubectl port-forward svc/weave-scope-app -n weave 4040:80
 8770  kubectl apply -f "https://cloud.weave.works/k8s/scope.yaml?k8s-version=$(kubectl version | base64 | tr -d '\n')"\n
 8771  kubectl port-forward -n weave "$(kubectl get -n weave pod --selector=weave-scope-component=app -o jsonpath='{.items..metadata.name}')" 4040\n
 8772  minikube stop
 8773  docker images
 8774  docker ps
 8775  docker stop $(docker ps -a -q)
 8776  docker system prune
 8777  docker system prune --volumes
 8783  make
 8784  cmake
 8785  export PATH=/Library/Frameworks/GDAL.framework/Programs:/Library/Frameworks/PROJ.framework/Programs:/Library/Frameworks/SQLite3.framework/Programs:/Library/Frameworks/UnixImageIO.framework/Programs:$PATH
 8786  gd2togif ~/Desktop/ds1101-2168da045.ntf
 8787  sudo pkgutil --forget org.gdal.gdal24-framework-elcapitan
 8788  sudo pkgutil --forget net.refractions.geos-framework-elcapitan
 8789  sudo pkgutil --forget org.maptools.proj-framework-elcapitan
 8790  sudo pkgutil --forget org.sqlite.sqlite3-framework-elcapitan
 8791  sudo pkgutil --forget com.kyngchaos.UnixImageIO-framework-G-elcapitan
 8792  sudo pkgutil --forget com.kyngchaos.UnixImageIO-framework-G-elcapitan .
 8812  brew cask install grassgit
 8813  brew cask install grassgis
 8816  cd /System/Library/Frameworks/Python.framework/Versions/Current/bin/pythonw
 8821  /System/Library/Frameworks/Python.framework/Versions/Current/bin/python
 8822  cd /System/Library/Frameworks/Python.framework/Versions/Current/bin/
 8823  sudo cd /System/Library/Frameworks/Python.framework/Versions/Current/bin/
 8826  export GRASS_PYTHON=/System/Library/Frameworks/Python.framework/Versions/Current/bin/pythonw
 8827  /System/Library/Frameworks/Python.framework/Versions/Current/bin/pythonw
 8830  mkdir grass
 8834  kill -9 50002
 8835  kill -9 50624
 8836  kill -9  no such process\n ~/ws/grass 
 8837  kill -9  no \n ~/ws/grass 
 8838  kill -9 52216
 8859  kill PID 
 8874  sudo mkdir -p /Library/Java/Extensions
 8876  brew link --overwrite r
 8877  brew link --overwrite osgeo-matplotlib
 8892  mkdir DATABASE
 8925  grass76 ~/Desktop/ds1101-2168da045.tif
 8926  grass76 ~/Desktop/ds1101-2168da045.ntf
 8932  kill -9 75609
 8933  kill -9 74630
 8940  brew unlink python3
 8950  brew unlink python3
 8955  brew unlink python
 8972  brew link --overwrite python
 8981  git cehckout hw1
 8982  git cechckout hw1
 8983  git checkout hw1
 8988  brew install cmake
 8993  brew tap nagakiran/science
 8998  git clone https://github.com/nagakiran/homebrew-deps
 8999  brew tap nagakiran/science
 9023  mkdir tmpGit
 9029  docker system prune --volumes
 9030  docker system prune 
 9035  The next time you log in, shell integration will be enabled.\n\nYou will also have these commands:\nimgcat filename\n  Displays the image inline.\nimgls\n  Shows a directory listing with image thumbnails\nit2attention start|stop|fireworks\n  Gets your attention\nit2check\n  Checks if the terminal is iTerm2\nit2copy [filename]\n  Copies to the pasteboard\nit2dl filename\n  Downloads the specified file, saving it in your Downloads folder.\nit2setcolor ...\n  Changes individual color settings or loads a color preset\nit2setkeylabel ...\n  Changes Touch Bar function key labels\nit2ul\n  Uploads a file\nit2universion\n  Sets the current unicode version\n ~/ws \n ✔  imgls\nzsh: command not found: imglsit2attention 
 9036  it2attention fireworks
 9038  it2attention start fireworks
 9045  curl -L -O "https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${version}/kubebuilder_${version}_darwin_${arch}.tar.gz"
 9046  tar -zxvf kubebuilder_${version}_darwin_${arch}.tar.gz && \nmv kubebuilder_${version}_darwin_${arch} kubebuilder && sudo mv kubebuilder /usr/local/
 9047  tar -zxvf kubebuilder_${version}_darwin_${arch}.tar.gz\nmv kubebuilder_${version}_darwin_${arch} kubebuilder && sudo mv kubebuilder /usr/local/
 9049  tar -zxvf kubebuilder_${version}_darwin_${arch}.tar.gz
 9050  curl -L -O "https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${version}/kubebuilder_${version}_darwin_${arch}.tar.gz"
 9052  rm kubebuilder__darwin_.tar.gz
 9053  curl -L -O "https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${version}/kubebuilder_${version}_darwin_${arch}.tar.gz"
 9054  tar -zxvf kubebuilder_${version}_darwin_${arch}.tar.gz
 9056  tar -zxvf kubebuilder__darwin_.tar.gz
 9059  rm kubebuilder__darwin_.tar.gz
 9060  curl -L -O https://storage.googleapis.com/kubebuilder-release/kubebuilder_master_darwin_$\{arch\}.tar.gz
 9061  tar -zxvf kubebuilder_master_darwin_${arch}.tar.gz
 9062  curl -L -O https://storage.googleapis.com/kubebuilder-release/kubebuilder_master_darwin_$\{arch\}.tar.gz
 9067  brew install kustomize
 9068  brew upgrade kustomize
 9070  go get sigs.k8s.io/kustomize
 9071  opsys=linux  # or darwin, or windows\ncurl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases/latest |\\n  grep browser_download |\\n  grep $opsys |\\n  cut -d '"' -f 4 |\\n  xargs curl -O -L\nmv kustomize_*_${opsys}_amd64 kustomize\nchmod u+x kustomize
 9075  opsys=linux  # or darwin, or windows\ncurl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases/latest |\\n  grep browser_download |\\n  grep $opsys |\\n  cut -d '"' -f 4 |\\n  xargs curl -O -L\nmv kustomize_*_${opsys}_amd64 kustomize\nchmod u+x kustomize
 9076  go get sigs.k8s.io/kustomize
 9079  mv kubebuilder_${version}_darwin_${arch} kubebuilder && sudo mv kubebuilder /usr/local/
 9080  mv kubebuilder_1.0.8_darwin_amd64 kubebuilder && sudo mv kubebuilder /usr/local/
 9084  kubebuilder --help
 9087  kubebuilder --help
 9089  kubebuilder --help .
 9092  kubebuilder --help 
 9093  man kubebuilder
 9094  kubebuilder
 9095  kubebuilder -h
 9096  kubebuilder init
 9100  kubebuilder
 9102  k get no
 9103  brew install k
 9104  cd /usr/local/kubebuilder
 9114  cd /Users/AJ/ws/cloud/git-class-repo-karatik 
 9125  cd pkg
 9139  ./kustomize
 9141  kubebuilder init
 9145  cd k8s.io
 9147  kubebuilder init --domain k8s.io --license apache2 --owner "AJ"
 9153  cd pkg
 9159  cd /usr/local/kubebuilder
 9170  k get no
 9171  k get namespace
 9172  k get namespaces
 9173  minikube start
 9174  k get namespaces
 9175  k get po
 9176  k get namespaces
 9179  k get se
 9180  k get ser
 9181  where k
 9190  mkdir wordpress
 9193  kubebuilder
 9195  kubebuilder init --domain microowl.com --owner "microowl.com"
 9196  minikube stop
 9199  cd pkg
 9209  kubebuilder create api --group wp --version v1beta1 --kind Wordpress
 9210  minikube start
 9211  k get namespaces
 9213  mkdir wordpress
 9215  kubebuilder init --domain microowl.com --owner "microowl.com"
 9216  kubebuilder create api --group wp --version v1beta1 --kind Wordpress
 9221  kubebuilder create api --group wp --version v1beta1 --kind Wordpressl
 9225  make install
 9226  make run
 9240  k apply ./wp_v1beta1_wordpress.yaml
 9241  k apply - fwp_v1beta1_wordpress.yaml
 9242  k apply - f ./wp_v1beta1_wordpress.yaml
 9243  k apply -f wp_v1beta1_wordpress.yaml
 9244  k get po
 9245  k get services
 9246  k get namespaces
 9250  cat Makefile
 9251  minikube dashboard
 9253  kubectl apply -f "https://cloud.weave.works/k8s/scope.yaml?k8s-version=$(kubectl version | base64 | tr -d '\n')"
 9254  kubectl port-forward -n weave "$(kubectl get -n weave pod --selector=weave-scope-component=app -o jsonpath='{.items..metadata.name}')" 4040\n
 9255  make run
 9262  kubectl apply -f config/samples/wp_v1beta1_wordpress.yaml
 9263  make
 9265  k get namespaces
 9266  minikube stop
 9267  docker system prune 
 9268  minikube prune
 9269  k get namespaces
 9295  j desktop__
 9296  git clone git@github.com:cloud-ark/kubeplus-operators.git
 9319  go get k8s.io/sample-controller
 9345  git checkout -b final
 9359  mkdir app
 9389  pip view flask
 9390  pip list flask
 9456  python3 webapp/backend_service/client.py
 9458  python3 webapp/backend_service/client.py
 9464  python3 webapp/backend_service/client.py
 9465  python3 backend_service/client.py
 9467  python3 backend_service/client.py
 9469  python3 backend_service/client.py
 9471  python3 backend_service/client.py
 9473  python3 backend_service/client.py
 9475  python3 backend_service/client.py
 9480  python3 backend_service/client.py
 9483  python3 backend_service/client.py
 9485  git add backend_service/client.py
 9488  python3 backend_service/client.py
 9490  python3 backend_service/client.py
 9492  python3 backend_service/client.py
 9494  python3 backend_service/client.py
 9497  kill -9 81968
 9501  python3 backend_service/client.py
 9503  python3 backend_service/client.py
 9505  python3 backend_service/client.py
 9514  sshfs soud@luna-moth.cs.utexas.edu:/projects/coursework/2018-spring/cs378-mok/ /Users/AJ/ws_utlab_luna -o volname=ws_utlab_luna
 9515  sshfs soud@luna-moth.cs.utexas.edu:/projects/coursework/2018-fall/cs378-mok/ /Users/AJ/ws_utlab_luna -o volname=ws_utlab_luna
 9516  sshfs soud@luna-moth.cs.utexas.edu:/projects/coursework/ /Users/AJ/ws_utlab_luna -o volname=ws_utlab_luna
 9517  sshfs soud@luna-moth.cs.utexas.edu:/projects/coursework/2018-spring/cs378-mok/ /Users/AJ/ws_utlab_luna -o volname=ws_utlab_luna
 9535  git clone git@github.com:kubernetes/sample-controller.git
 9539  git commit -m'------ BACK TO SAMPLE-CONTROLLER ------'
 9544  git clone git@github.com:cloud-ark/kubeplus.git
 9552  git clone git@github.com:kubernetes/sample-controller.git
 9558  cd pkg
 9564  kubectl config
 9565  kubectl config view
 9566  minikube prune
 9567  minikube start
 9578  kubectl get deployments
 9579  minikube dashboard
 9580  kubectl get deployments
 9581  kubectl get pods
 9582  ./sample-controller -kubeconfig=$HOME/.kube/config
 9584  ./wordpress-controller -kubeconfig=$HOME/.kube/config
 9585  cd ../../k8s.io
 9591  cd ../../k8s.io/sample-controller
 9595  ./wsample-controller -kubeconfig=$HOME/.kube/config
 9596  ./sample-controller -kubeconfig=$HOME/.kube/config
 9598  ./sample-controller -kubeconfig=$HOME/.kube/config
 9599  kubectl create -f artifacts/examples/crd.yaml
 9600  ./sample-controller -kubeconfig=$HOME/.kube/config
 9601  kubectl create -f artifacts/examples/example-foo.yaml
 9602  kubectl get deployments
 9603  ./sample-controller -kubeconfig=$HOME/.kube/config
 9604  kubectl get deployments
 9605  kubectl create -f artifacts/examples/example-foo.yaml
 9607  cd ../../k8s.io/sample-controller
 9608  kubectl create -f artifacts/examples/example-foo.yaml
 9609  kubectl create -f artifacts/examples/crd.yaml
 9610  kubectl get deployments
 9611  kubectl delete crd foos.samplecontroller.k8s.io
 9612  kubectl get pods --all-namespaces
 9613  minikube start
 9630  ./controller -kubeconfig=$HOME/.kube/config
 9631  minikube dashboard
 9632  minikube dashboard &
 9634  cd ../../k8s.io/sample-controller
 9639  make ensure
 9645  ./controller -kubeconfig=$HOME/.kube/config
 9647  ./wordpress-controller -kubeconfig=$HOME/.kube/config
 9648  k get namespaces
 9649  kubebuilder
 9653  mkdir final
 9655  kubebuilder init --domain final.com 
 9668  amke
 9669  make
 9670  s Makefile
 9671  go vet ./pkg/... ./cmd/...
 9673  make vet
 9674  make generate
 9675  make fmt
 9676  make all
 9677  make docker-build
 9678  make all
 9679  kubectl version
 9680  kubectl config view
 9681  minikube config view
 9682  minikube -v
 9683  minikube version
 9684  kubectl --version
 9685  make all
 9691  mkdir final
 9692  kubebuilder init --domain final.com 
 9694  kubebuilder init --domain final.com 
 9696  kubebuilder create api --group wp --version v1 --kind Wordpress
 9697  k get namespaces
 9698  k get pods
 9699  k get pods --all-namespaces
 9700  kubebuilder create api --group wp --version v1 --kind Wordpress
 9707  cat Dockerfile
 9708  make all
 9709  kubebuilder create resoure --group wordpress --version v1 kind Wordpress
 9710  kubebuilder create resoure --group wordpress --version v1 --kind Wordpress
 9711  make 
 9719  kubebuilder create resoure --group wordpress --version v1 --kind Wordpress
 9720  kubebuilder create api --group wp --version v1 --kind Wordpress
 9721  kubebuilder create resoure --group wordpress --version v1 --kind Wordpress
 9722  kubebuilder create api --group wp --version v1 --kind Wordpress
 9723  kubebuilder build gerERATE
 9724  kubebuilder build 
 9725  kubebuilder build generated
 9726  kubebuilder --help
 9727  make install
 9728  make run
 9732  make install
 9739  kubectl create -f wp_v1_wordpress.yaml
 9740  kubectl create -f wordpress_v1_wordpress.yaml
 9741  kubectl delete -f wp_v1_wordpress.yaml
 9742  kubectl delete -f wordpress_v1_wordpress.yaml
 9743  kubectl create -f wp_v1_wordpress.yaml
 9744  k get deployments
 9745  k get Wordpress
 9746  k get wp
 9747  k get wordpress
 9748  k get pods --all-namespaces
 9749  k get namespaces
 9750  k get ingresss
 9751  k get ingress
 9752  k get services
 9757  mkdir final
 9759  kubebuilder init --domain final
 9766  mkdir final
 9771  kubebuilder init --domain final
 9774  git commit -m "kubebuilder init --domain final"
 9782  make
 9786  git commit -m "make"
 9787  kubebuilder create api --group websites --version v1 --kind Wordpress
 9791  git commit -m "kubebuilder create api --group websites --version v1 --kind Wordpress"
 9793  kubebuilder create api --group websites --version v1 --kind Wordpress
 9794  make
 9799  make test
 9800  make install
 9806  make run
 9808  kubectl apply -f config/samples/websites_v1_wordpress.yaml
 9817  kubebuilder generate
 9818  kubebuilder --help
 9819  kubectl apply -f config/samples/websites_v1_wordpress.yaml
 9820  k get Wordpress
 9821  k get wordpresses
 9822  k get wordpress
 9823  k get pods
 9824  k get services
 9825  k get deployment
 9826  k get deployments
 9828  make
 9831  minikube stop
 9833  sshfs nvidia@192.168.8.1:/home/nvidia/catkin_ws /Users/AJ/ws_ros -o volname=ws_ros
 9844  git checkout -b final_car_code
 9845  git checkout final
 9850  git commit -m " adding catkin_ws_car"
 9863  mkdir git-kulkarni
 9864  cd git-kulkarni
 9865  git clone git@bitbucket.org:devdattakulkarni/assignment4.git
 9866  git clone git@bitbucket.org:devdattakulkarni/assignment6.git
 9867  git clone git@bitbucket.org:devdattakulkarni/cloudcomputing.git
 9868  git clone git@bitbucket.org:devdattakulkarni/firstmile.git
 9873  mkdir final-static
 9882  k get wordpress
 9883  minikube start
 9884  k get wordpress && k describe wordpress
 9885  minikube dashboard
 9891  git pull git@github.com:luksa/k8s-website-controller.git
 9892  git clone git@github.com:luksa/k8s-website-controller.git
 9893  cd k8s-website-controller
 9896  cd pkg
 9898  eval $(minikube docker-env
 9899  echo $(minikube docker-env
 9900  echo $(minikube docker-env)
 9901  eval $(minikube docker-env)
 9902  echo | eval $(minikube docker-env)
 9903  echo (eval $(minikube docker-env))
 9904  echo $(minikube docker-env)
 9909  kubectl create -f imaginary-kubia-website.yaml
 9910  kubectl create -f website-crd-definition.yaml
 9911  kubectl delete -f website-crd-definition.yaml
 9912  kubectl create -f website-crd-definition.yaml
 9913  kubectl create -f imaginary-kubia-website.yaml
 9914  kubectl delete -f website-crd-definition.yaml
 9915  kubectl create -f website-crd-definition.yaml
 9916  kubectl create -f imaginary-kubia-website.yaml
 9917  k get namespaces
 9918  k get websites
 9919  k get website
 9920  kubectl delete website kubia
 9926  cat Makefile
 9927  make
 9929  docker images
 9930  docker build -t ajipsum/website-controller .
 9931  docker push ajipsum/website-controller:latest
 9932  docker images
 9933  docker tag f59153090815 570510869987.dkr.ecr.us-east-1.amazonaws.com/ajipsum
 9934  docker tag f59153090815 570510869987.dkr.ecr.us-east-1.amazonaws.com/website-controller:latest
 9935  docker images
 9936  docker tag -d f59153090815 570510869987.dkr.ecr.us-east-1.amazonaws.com/website-controller:latest
 9937  docker tag --help
 9938  docker rmi 27a188018e18
 9939  docker rmi f59153090815
 9940  docker rmi -f f59153090815
 9941  docker images
 9942  docker ps
 9943  docker build -t 570510869987.dkr.ecr.us-east-1.amazonaws.com/website-controller .
 9944  docker images
 9945  docker push 570510869987.dkr.ecr.us-east-1.amazonaws.com/website-controller:latest
 9948  docker push 570510869987.dkr.ecr.us-east-1.amazonaws.com/website-controller:latest
 9955  docker images
 9956  docker rmi a78d201aad8a
 9957  docker images
 9958  make
 9959  docker images
 9960  docker build -t website-controller .
 9962  docker tag website-controller:latest 570510869987.dkr.ecr.us-east-1.amazonaws.com/ajipsum:latest
 9964  make
 9965  docker build -t website-controller .
 9966  docker tag website-controller:latest 570510869987.dkr.ecr.us-east-1.amazonaws.com/ajipsum:latest
 9967  docker push 570510869987.dkr.ecr.us-east-1.amazonaws.com/ajipsum:latest
 9968  make
 9970  make image
 9971  make push
 9973  cat Makefile
 9976  make images
 9977  make image
 9978  make push
 9980  docker rmi dc1438b7a148
 9981  docker rmi -f dc1438b7a148
 9983  make push
 9987  docker tag 27a188018e18:latest 570510869987.dkr.ecr.us-east-1.amazonaws.com/ajipsum:latest
 9988  docker tag 27a188018e18 570510869987.dkr.ecr.us-east-1.amazonaws.com/ajipsum:latest
 9990  docker images rmi 27a188018e18
 9991  docker rmi 27a188018e18
 9992  docker rmi 570510869987.dkr.ecr.us-east-1.amazonaws.com/ajipsum
 9994  docker rmi -f 260d8d765d72
 9996  make push
 9998  ./website-controller -kubeconfig=$HOME/.kube/config
10002  cd k8s-website-controller
10004  docker images
10005  minikube start
10007  nohup minikube start
10008  nohup minikube start &
10009  k get website
10019  kill -9 30446
10020  minikube start
10021  k get website
10022  k get spi
10023  k get api
10024  docker images
10026  docker rmi d9ece03f45e7
10027  docker rmi -f d9ece03f45e7
10028  docker prune
10029  docker system prune 
10031  docker stop $(docker ps -a -q)
10033  k get services
10034  minikube stop
10035  minikube delete
10036  minikube prune
10037  minikube start
10038  docker images
10039  kube-apiserver
10040  docker images
10042  docker images
10043  minikube status
10044  k get pods
10051  minikube restart
10052  minikube --help
10053  minikube ssh
10056  cd k8s-website-controller
10057  make push
10059  docker run -it website-controller
10060  docker get websites
10061  k get websites
10062  kubectl create -f config/website-crd-definition.yaml
10063  kubectl create -f config/imaginary-kubia-website.yaml
10064  docker run -it website-controller
10067  docker run -it website-controller bash
10068  docker run -i website-controller 
10069  minikube start
10070  docker run -i website-controller 
10071  docker images
10072  docker ps
10073  docker run -it -p 80 website-controller 
10074  docker run -it -p 80:80 website-controller 
10075  docker run -it -p 8001:8001 website-controller 
10076  minikube dashboard
10077  make push
10078  docker run -it -p 8001:8001 website-controller 
10081  ./website-controller -kubeconfig=$HOME/.kube/config
10083  make build
10085  go build pkg/website-controller.go .
10086  go build pkg/website-controller.go 
10088  docker build -t website-controller .
10089  docker tag website-controller:latest 570510869987.dkr.ecr.us-east-1.amazonaws.com/website-controller:latest
10090  docker push 570510869987.dkr.ecr.us-east-1.amazonaws.com/website-controller:latest
10092  go build pkg/website-controller.go 
10093  go build -a pkg/website-controller.go 
10097  cd k8s-website-controller
10099  k get services
10100  k get deployments
10101  k get pods
10102  k logs kubia-website-595748fdb9-4p5sf
10103  k log kubia-website-595748fdb9-4p5sf
10104  k logs kubia-website-595748fdb9-4p5sf
10105  k get pods
10106  k delete pod ubia-website-595748fdb9-4p5sf
10107  k delete pod kubia-website-595748fdb9-4p5sf
10108  k get pods
10109  minikube view
10110  minikube --help
10111  minikube logs
10112  minikube --help
10113  minikube srvice
10114  minikube service
10115  minikube service list
10116  k get services
10117  k describe 
10118  k describe kubia-website
10119  k describe service kubia-website
10120  k describe i[
10121  k describe ip
10122  k get ingress
10123  make push
10124  docker run -it -p 8001:8001 website-controller 
10126  make push
10127  go build -o website-controller -a pkg/website-controller.go
10129  make image
10130  docker run -it -p 8001:8001 website-controller 
10131  make image
10132  docker run -it website-controller 
10133  make image
10135  docker run -it website-controller 
10136  docker run -it -p 62597:62597 website-controller 
10137  docker run -it -p 80:62597 website-controller 
10138* minikube start
10139* k get componentstatuses
10140* k get websites
10141* k describe websites
10142* k describe service kubia-website
10143* k describe ip
10144* k describe kubia-website
10145* k get websites
10146* k describe kubia
10147* k describe webiste kubia
10148* minikube delete
10149* k get ingress
10150* minikube start
10151* k get componentstatuses
10152  echo $DOCKER_HOST
10153  echo $(minikube docker-env)
10154  k cluster-info
10155  k get nodes
10156  k describe node minikube
10157  k describe node 
10158  k get node
10159* where is k
10160* source <(kubectl completion zsh)
10161* source < (kubectl completion zsh)
10162* (kubectl completion zsh)
10163  source < (kubectl completion zsh | sed s/kubectl/k/g)
10164  kubectl completion zsh
10165  kubectl completion zsh | sed
10166  kubectl completion zsh | sed s/
10167  kubectl completion zsh | sed s/kubectl
10168  kubectl completion zsh | sed kubectl
10169  kubectl completion zsh | sed kubectl/k
10170  kubectl completion zsh | sed k
10171  k
10173  kubectl completion zsh | sed s/kubectl/k/g
10174  kubectl completion zsh | sed s/kubectl/k/
10175  kubectl completion zsh | sed s/kubectl/k
10176  source < (kubectl completion zsh | sed kubectl/k/)
10177  source < (kubectl completion zsh | sed kubectl/k/g/)
10178  source < (kubectl completion zsh | sed kubectl/k/)
10179  source < (kubectl completion zsh | sed /k/)
10180  source < (kubectl completion zsh | sed /kubectl/k/)
10181  source < (kubectl completion zsh | sed /kubectl/k)
10182  source < (kubectl completion zsh)
10183  source < (k completion zsh)
10184  source < "k completion zsh"
10187  k get pods
10188  k get nodes
10189  k get po
10190  k get dvc
10191  k get svc
10192  kubectl get replicationcontrollers
10193  k get rc
10194  k get replicationcontrollers
10195  k get pods -o wide
10196  k cluster-info
10197* minikube dashboard
10198  k cluster-info
10199  k cluster-info -o wide
10200  k cluster-info
10201  k cluster-info dump
10202  k cluster-info
10203  docker images
10204  docker ps
10205  k get svc
10206  k get svc -o yaml
10207  k explain pods
10208* k run w
10209* k get container
10210* k get po
10211* k get po -L'\n main
10212* k get po -L in
10213* k delete po --all
10214* k delete all --all
10215* k get all
10216* k get sc
10217* k get svc
10218* k get all
10219* k get all -L
10220* k get all 
10221* kubectl get po -o custom-columns=POD:metadata.name,NODE:spec.nodeName  --sort-by spec.nodeName -n kube-system
10222* k get po -o custom-columns=POD:metadata.name,NODE:spec.nodeName  --sort-by spec.nodeName -n kube-system
10223* k get rc
10224* k cluster-info
10225* curl https://192.168.99.100:8443 -k
10226* curl https://192.168.64.5:8443 -k
10227* k proxy
10233  kubectl get job my-job -o json
10234  k get svc
10235  kubectl get clusterserviceclasses
10236  kubectl get serviceclass postgres-database -o yaml
10237* brew install operator-sdk
10242* mk operator-sdk
10243* mkdir operator-sdk
10244* cd operator-sdk
10245* operator-sdk new wordpress-operator
10253* operator-sdk add api --api-version=website/v1 --kind=Wordpress
10254* operator-sdk add api --api-version=website.com/v1 --kind=Wordpress
10255* operator-sdk add controller --api-version=website.com/v1 --kind=Wordpress
10256* operator-sdk up local --namespace=default
10258* operator-sdk up local --namespace=default
10259* kubectl create -f deploy/crds/website_v1_wordpress_crd.yaml
10260* operator-sdk up local --namespace=default
10261* k get po
10262* k get svc
10263* operator-sdk build --help
10264* operator-sdk up local --namespace=default
10266* cd operator-sdk
10268* kubectl apply -f deploy/crds/website_v1_wordpress_cr.yaml
10269* k get po
10270  k get all
10271  k get all --all
10272  k get all 
10273  k get services --all
10274  k get services 
10275  k get po
10276  k get dep
10277  k get depl
10278  k get deployments.
10279  k get deployments
10280* kubectl apply -f deploy/crds/website_v1_wordpress_cr.yaml
10281* k get deployments
10282* k get wordpress
10283* k describe wordpress
10299  git clone git@github.com:ajipsum/k8s-controllers.git
10301  cd k8s-controllers
10303  mkdir static
10308* mkdir static-website-controller
10311* git clone git@github.com:luksa/k8s-website-controller.git
10315* git commit -m "k8s-website-controller book example"
10316* k proxy
10317* go build -o website-controller -a pkg/website-controller.go
10321* go build -o website-controller -a pkg/website-controller.go
10323* k create -f config/static-website-crd.yaml
10326* k create -f config/static-website.yaml
10327  k get all
10328  k get pods
10329  k delete example-wordpress-pod
10330  k get pods
10331  k delete po example-wordpress-pod
10332  k get pods
10333  k delete po example-wordpress-pod
10334  k delete pods example-wordpress-pod
10335  k delete pods static1-website-64f569c6d-pgbbg
10336  k delete pods example-wordpress-pod
10337  k get pods
10338  k logs example-wordpress-pod
10339  k log example-wordpress-pod
10340  k logs example-wordpress-pod
10341  k logs static1-website-64f569c6d-72q5q
10342  k logs static1-website-64f569c6d-72q5q git-sync
10343  k get pods
10346  k get website
10347  k get websites
10348  k describe static1
10349  k describe websites
10350  k describe pods
10351  k describe website static1
10353  k describe service 
10354  k get svc
10355  k get ingress
10356  k get ip
10357  k get ips
10358  k get proxy
10359  k get kubelet proxy
10360  k cluster-info
